{"version":3,"sources":["../webpack/bootstrap","../node_modules/lodash-es/_freeGlobal.js","../node_modules/webpack/buildin/global.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/d3-force/src/center.js","../node_modules/d3-force/src/constant.js","../node_modules/d3-force/src/jiggle.js","../node_modules/d3-quadtree/src/add.js","../node_modules/d3-quadtree/src/cover.js","../node_modules/d3-quadtree/src/quad.js","../node_modules/d3-quadtree/src/x.js","../node_modules/d3-quadtree/src/y.js","../node_modules/d3-quadtree/src/quadtree.js","../node_modules/d3-force/src/collide.js","../node_modules/d3-quadtree/src/data.js","../node_modules/d3-quadtree/src/extent.js","../node_modules/d3-quadtree/src/find.js","../node_modules/d3-quadtree/src/remove.js","../node_modules/d3-quadtree/src/root.js","../node_modules/d3-quadtree/src/size.js","../node_modules/d3-quadtree/src/visit.js","../node_modules/d3-quadtree/src/visitAfter.js","../node_modules/d3-collection/src/map.js","../node_modules/d3-collection/src/set.js","../node_modules/d3-force/src/link.js","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-timer/src/timer.js","../node_modules/d3-force/src/simulation.js","../node_modules/d3-force/src/manyBody.js","../node_modules/lodash-es/isObject.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/now.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/isSymbol.js","../node_modules/lodash-es/toNumber.js","../node_modules/lodash-es/debounce.js","../node_modules/lodash-es/throttle.js","worker/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","freeGlobal","__webpack_exports__","g","this","Function","eval","e","window","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","iterator","next","done","push","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","constant","x","jiggle","Math","random","add_add","tree","y","isNaN","parent","xm","ym","xp","yp","right","bottom","j","node","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","_x","_y","src_quad","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","addAll","leaf_copy","copy","treeProto","collide_x","vx","collide_y","vy","child","source","target","pop","add","cover","xz","yz","Infinity","floor","z","visit","extent","_","arguments","find","radius","x2","y2","q","x3","y3","quads","dx","dy","d2","sqrt","remove","retainer","previous","removeAll","root","size","callback","visitAfter","collide","radii","strength","iterations","force","xi","yi","ri","ri2","k","prepare","index","apply","quad","rj","initialize","map_Map","map","f","each","set","constructor","has","clear","keys","slice","values","entries","empty","src_map","Set","proto","link_find","nodeById","nodeId","Error","src_link","links","strengths","distances","count","bias","id","link","min","distance","alpha","b","initializeStrength","initializeDistance","noop","dispatch","Dispatch","type","dispatch_set","concat","on","typename","types","T","trim","split","indexOf","that","args","taskHead","taskTail","src_dispatch","timer_frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","requestAnimationFrame","setTimeout","timer_now","clearNow","Timer","_call","_time","_next","timer","delay","time","restart","wake","timerFlush","t0","t2","t1","sleep","nap","poke","clearTimeout","clearInterval","setInterval","stop","simulation_x","simulation_y","initialRadius","initialAngle","PI","src_simulation","_nodes","simulation","_alpha","_alphaMin","_alphaDecay","pow","_alphaTarget","_velocityDecay","forces","stepper","step","event","tick","fx","fy","initializeNodes","angle","cos","sin","initializeForce","alphaMin","alphaDecay","alphaTarget","velocityDecay","closest","manyBody","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","w","distanceMin","distanceMax","theta","lodash_es_isObject","freeSelf","self","_freeGlobal","lodash_es_now","_Symbol","objectProto","_getRawTag_hasOwnProperty","nativeObjectToString","toString","symToStringTag","_getRawTag","isOwn","tag","unmasked","result","_objectToString_nativeObjectToString","_objectToString","nullTag","undefinedTag","_baseGetTag_symToStringTag","_baseGetTag","lodash_es_isObjectLike","symbolTag","lodash_es_isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","lodash_es_toNumber","other","valueOf","replace","isBinary","test","FUNC_ERROR_TEXT","nativeMax","max","nativeMin","lodash_es_debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","thisArg","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","cancel","flush","throttle_FUNC_ERROR_TEXT","lodash_es_throttle","onMessage","listener","msg","addEventListener","removeEventListener","layout","params","replyer","assign","edges","lookup","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","return","_ref","_ref2","a","forceSimulation","forceManyBody","forceCollide","forceLink","stopper","console","log","toNodePos","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","throttle","cmds","postMessage"],"mappings":"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","file":"82afec16769321fce590.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/materialnet/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nexport default freeGlobal;","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function (x, y) {\n  var nodes;\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}","export default function (x) {\n  return function () {\n    return x;\n  };\n}","export default function () {\n  return (Math.random() - 0.5) * 1e-6;\n}","export default function (d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {\n    data: d\n  },\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.\n\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  } // Is the new point is exactly coincident with the existing point?\n\n\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.\n\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));\n\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d,\n      i,\n      n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity; // Compute the points and their extent.\n\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  } // If there were no (valid) points, abort.\n\n\n  if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.\n\n  this.cover(x0, y0).cover(x1, y1); // Add the new points.\n\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}","export default function (x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1; // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  } // Otherwise, double repeatedly to cover.\n  else {\n      var z = x1 - x0,\n          node = this._root,\n          parent,\n          i;\n\n      while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n        i = (y < y0) << 1 | x < x0;\n        parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n\n        switch (i) {\n          case 0:\n            x1 = x0 + z, y1 = y0 + z;\n            break;\n\n          case 1:\n            x0 = x1 - z, y1 = y0 + z;\n            break;\n\n          case 2:\n            x1 = x0 + z, y0 = y1 - z;\n            break;\n\n          case 3:\n            x0 = x1 - z, y0 = y1 - z;\n            break;\n        }\n      }\n\n      if (this._root && this._root.length) this._root = node;\n    }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}","export default function (node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}","export function defaultX(d) {\n  return d[0];\n}\nexport default function (_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}","export function defaultY(d) {\n  return d[1];\n}\nexport default function (_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}","import tree_add, { addAll as tree_addAll } from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, { removeAll as tree_removeAll } from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, { defaultX } from \"./x\";\nimport tree_y, { defaultY } from \"./y\";\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {\n    data: leaf.data\n  },\n      next = copy;\n\n  while (leaf = leaf.next) {\n    next = next.next = {\n      data: leaf.data\n    };\n  }\n\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function () {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n  if (!node) return copy;\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n  nodes = [{\n    source: node,\n    target: copy._root = new Array(4)\n  }];\n\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({\n          source: child,\n          target: node.target[i] = new Array(4)\n        });else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport { quadtree } from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function (radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i,\n        n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data,\n          rj = quad.r,\n          r = ri + rj;\n\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n\n        return;\n      }\n\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    radii = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}","export default function () {\n  var data = [];\n  this.visit(function (node) {\n    if (!node.length) do {\n      data.push(node.data);\n    } while (node = node.next);\n  });\n  return data;\n}","export default function (_) {\n  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}","import Quad from \"./quad\";\nexport default function (x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.\n\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n      quads.push(new Quad(node[3], xm, ym, x2, y2), new Quad(node[2], x1, ym, xm, y2), new Quad(node[1], xm, y1, x2, ym), new Quad(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.\n\n      if (i = (y >= ym) << 1 | x >= xm) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    } // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n        var dx = x - +this._x.call(null, node.data),\n            dy = y - +this._y.call(null, node.data),\n            d2 = dx * dx + dy * dy;\n\n        if (d2 < radius) {\n          var d = Math.sqrt(radius = d2);\n          x0 = x - d, y0 = y - d;\n          x3 = x + d, y3 = y + d;\n          data = node.data;\n        }\n      }\n  }\n\n  return data;\n}","export default function (d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j; // If the tree is empty, initialize the root as a leaf.\n\n  if (!node) return this; // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;\n  } // Find the point to remove.\n\n  while (node.data !== d) {\n    if (!(previous = node, node = node.next)) return this;\n  }\n\n  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.\n\n  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.\n\n  if (!parent) return this._root = next, this; // Remove this leaf.\n\n  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.\n\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {\n    if (retainer) retainer[j] = node;else this._root = node;\n  }\n\n  return this;\n}\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) {\n    this.remove(data[i]);\n  }\n\n  return this;\n}","export default function () {\n  return this._root;\n}","export default function () {\n  var size = 0;\n  this.visit(function (node) {\n    if (!node.length) do {\n      ++size;\n    } while (node = node.next);\n  });\n  return size;\n}","import Quad from \"./quad\";\nexport default function (callback) {\n  var quads = [],\n      q,\n      node = this._root,\n      child,\n      x0,\n      y0,\n      x1,\n      y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n\n  return this;\n}","import Quad from \"./quad\";\nexport default function (callback) {\n  var quads = [],\n      next = [],\n      q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    var node = q.node;\n\n    if (node.length) {\n      var child,\n          x0 = q.x0,\n          y0 = q.y0,\n          x1 = q.x1,\n          y1 = q.y1,\n          xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n\n    next.push(q);\n  }\n\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n\n  return this;\n}","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function has(key) {\n    return prefix + key in this;\n  },\n  get: function get(key) {\n    return this[prefix + key];\n  },\n  set: function set(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function remove(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function clear() {\n    for (var property in this) {\n      if (property[0] === prefix) delete this[property];\n    }\n  },\n  keys: function keys() {\n    var keys = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) keys.push(property.slice(1));\n    }\n\n    return keys;\n  },\n  values: function values() {\n    var values = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) values.push(this[property]);\n    }\n\n    return values;\n  },\n  entries: function entries() {\n    var entries = [];\n\n    for (var property in this) {\n      if (property[0] === prefix) entries.push({\n        key: property.slice(1),\n        value: this[property]\n      });\n    }\n\n    return entries;\n  },\n  size: function size() {\n    var size = 0;\n\n    for (var property in this) {\n      if (property[0] === prefix) ++size;\n    }\n\n    return size;\n  },\n  empty: function empty() {\n    for (var property in this) {\n      if (property[0] === prefix) return false;\n    }\n\n    return true;\n  },\n  each: function each(f) {\n    for (var property in this) {\n      if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map(); // Copy constructor.\n\n  if (object instanceof Map) object.each(function (value, key) {\n    map.set(key, value);\n  }); // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n      if (f == null) while (++i < n) {\n        map.set(i, object[i]);\n      } else while (++i < n) {\n        map.set(f(o = object[i], i, object), o);\n      }\n    } // Convert object to map.\n    else if (object) for (var key in object) {\n        map.set(key, object[key]);\n      }\n  return map;\n}\n\nexport default map;","import { default as map, prefix } from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function add(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set(); // Copy constructor.\n\n  if (object instanceof Set) object.each(function (value) {\n    set.add(value);\n  }); // Otherwise, assume it’s an array.\n  else if (object) {\n      var i = -1,\n          n = object.length;\n      if (f == null) while (++i < n) {\n        set.add(object[i]);\n      } else while (++i < n) {\n        set.add(f(object[i], i, object));\n      }\n    }\n  return set;\n}\n\nexport default set;","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport { map } from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function (links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function (_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function (_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function (_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}","var noop = {\n  value: function value() {}\n};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || t in _) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function (t) {\n    var name = \"\",\n        i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {\n      type: t,\n      name: name\n    };\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function on(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length; // If no callback was specified, return the callback of the given type and name.\n\n    if (arguments.length < 2) {\n      while (++i < n) {\n        if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      }\n\n      return;\n    } // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n\n\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) {\n        _[t] = set(_[t], typename.name, null);\n      }\n    }\n\n    return this;\n  },\n  copy: function copy() {\n    var copy = {},\n        _ = this._;\n\n    for (var t in _) {\n      copy[t] = _[t].slice();\n    }\n\n    return new Dispatch(copy);\n  },\n  call: function call(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) {\n      args[i] = arguments[i + 2];\n    }\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  },\n  apply: function apply(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) {\n      t[i].value.apply(that, args);\n    }\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n\n  if (callback != null) type.push({\n    name: name,\n    value: callback\n  });\n  return type;\n}\n\nexport default dispatch;","var frame = 0,\n    // is an animation frame pending?\ntimeout = 0,\n    // is a timeout pending?\ninterval = 0,\n    // are any timers active?\npokeDelay = 1000,\n    // how frequently we check for clock skew\ntaskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n  setTimeout(f, 17);\n};\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call = this._time = this._next = null;\n}\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function restart(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;else taskHead = this;\n      taskTail = this;\n    }\n\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function stop() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\nexport function timer(callback, delay, time) {\n  var t = new Timer();\n  t.restart(callback, delay, time);\n  return t;\n}\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n  var t = taskHead,\n      e;\n\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(),\n      delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0,\n      t1 = taskHead,\n      t2,\n      time = Infinity;\n\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}","import { dispatch } from \"d3-dispatch\";\nimport { map } from \"d3-collection\";\nimport { timer } from \"d3-timer\";\nexport function x(d) {\n  return d.x;\n}\nexport function y(d) {\n  return d.y;\n}\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\nexport default function (_nodes) {\n  var simulation,\n      _alpha = 1,\n      _alphaMin = 0.001,\n      _alphaDecay = 1 - Math.pow(_alphaMin, 1 / 300),\n      _alphaTarget = 0,\n      _velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (_nodes == null) _nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n\n    if (_alpha < _alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i,\n        n = _nodes.length,\n        node;\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      _alpha += (_alphaTarget - _alpha) * _alphaDecay;\n      forces.each(function (force) {\n        force(_alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = _nodes[i];\n        if (node.fx == null) node.x += node.vx *= _velocityDecay;else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= _velocityDecay;else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = _nodes.length, node; i < n; ++i) {\n      node = _nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i),\n            angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(_nodes);\n    return force;\n  }\n\n  initializeNodes();\n  return simulation = {\n    tick: tick,\n    restart: function restart() {\n      return stepper.restart(step), simulation;\n    },\n    stop: function stop() {\n      return stepper.stop(), simulation;\n    },\n    nodes: function nodes(_) {\n      return arguments.length ? (_nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : _nodes;\n    },\n    alpha: function alpha(_) {\n      return arguments.length ? (_alpha = +_, simulation) : _alpha;\n    },\n    alphaMin: function alphaMin(_) {\n      return arguments.length ? (_alphaMin = +_, simulation) : _alphaMin;\n    },\n    alphaDecay: function alphaDecay(_) {\n      return arguments.length ? (_alphaDecay = +_, simulation) : +_alphaDecay;\n    },\n    alphaTarget: function alphaTarget(_) {\n      return arguments.length ? (_alphaTarget = +_, simulation) : _alphaTarget;\n    },\n    velocityDecay: function velocityDecay(_) {\n      return arguments.length ? (_velocityDecay = 1 - _, simulation) : 1 - _velocityDecay;\n    },\n    force: function force(name, _) {\n      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);\n    },\n    find: function find(x, y, radius) {\n      var i = 0,\n          n = _nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n      if (radius == null) radius = Infinity;else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = _nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n    on: function on(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport { quadtree } from \"d3-quadtree\";\nimport { x, y } from \"./simulation\";\nexport default function () {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i,\n        n = nodes.length,\n        tree = quadtree(nodes, x, y).visitAfter(accumulate);\n\n    for (alpha = _, i = 0; i < n; ++i) {\n      node = nodes[i], tree.visit(apply);\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        node;\n    strengths = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n    }\n  }\n\n  function accumulate(quad) {\n    var strength = 0,\n        q,\n        c,\n        weight = 0,\n        x,\n        y,\n        i; // For internal nodes, accumulate forces from child quadrants.\n\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n\n      quad.x = x / weight;\n      quad.y = y / weight;\n    } // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n        q = quad;\n        q.x = q.data.x;\n        q.y = q.data.y;\n\n        do {\n          strength += strengths[q.data.index];\n        } while (q = q.next);\n      }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n\n      return true;\n    } // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.\n\n\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do {\n      if (quad.data !== node) {\n        w = strengths[quad.data.index] * alpha / l;\n        node.vx += x * w;\n        node.vy += y * w;\n      }\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function (_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function (_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function (_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;","import freeGlobal from './_freeGlobal.js';\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nexport default root;","import root from './_root.js';\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\n\nvar now = function now() {\n  return root.Date.now();\n};\n\nexport default now;","import root from './_root.js';\n/** Built-in value references. */\n\nvar Symbol = root.Symbol;\nexport default Symbol;","import Symbol from './_Symbol.js';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nexport default getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n/** `Object#toString` result references. */\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nexport default baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n/** `Object#toString` result references. */\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nexport default isSymbol;","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n/** Used as references for various `Number` constants. */\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nexport default toNumber;","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n/** Error message constants. */\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\n\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  wait = toNumber(wait) || 0;\n\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time; // Start the timer for the trailing edge.\n\n    timerId = setTimeout(timerExpired, wait); // Invoke the leading edge.\n\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n\n    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n  }\n\n  function timerExpired() {\n    var time = now();\n\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    } // Restart the timer.\n\n\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n\n    return result;\n  }\n\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n/** Error message constants. */\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\n\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;","import { forceSimulation, forceManyBody, forceLink, forceCollide } from 'd3-force';\nimport { throttle } from 'lodash-es';\n\n// eslint-disable-next-line no-restricted-globals\nconst root = self;\n\nfunction onMessage(listener) {\n    const l = (msg) => {\n        listener(msg.data, msg);\n    }\n    root.addEventListener('message', l);\n\n    return () => {\n        root.removeEventListener('message', l);\n    }\n}\n\nfunction layout(params, replyer, key) {\n    params = Object.assign({\n        nodes: [],\n        edges: [],\n        alpha: 1,\n\n    }, params);\n\n    // nodes format as input: {name: string, x: number, y: number, radius: number}[]\n    // edge format as inptu: [string, string];\n\n    // position output format: {[node string]: {x, y}};\n\n    const lookup = new Map();\n    const nodes = params.nodes;\n    for (const node of nodes) {\n        lookup.set(node.name, node);\n    };\n    const edges = params.edges.map(([a, b]) => {\n        return {\n            source: lookup.get(a),\n            target: lookup.get(b)\n        };\n    });\n\n    const simulation = forceSimulation()\n        .nodes(nodes)\n        .alpha(params.alpha)\n        .force('charge', forceManyBody())\n        .force('collide', forceCollide().radius((node) => node.radius))\n        .force('link', forceLink(edges));\n    \n    const stopper = onMessage((msg) => {\n        if (msg.key !== key) {\n            return;\n        }\n        switch (msg.type) {\n            case 'abort':\n                simulation.stop();\n                stopper();\n                break;\n            default:\n                console.log('unknown message', msg);\n        }\n    });\n\n    const toNodePos = () => {\n        const r = {};\n        for (const node of nodes) {\n            r[node.name] = { x: node.x, y: node.y };\n        }\n        return r;\n    }\n    \n    simulation.on('tick', throttle(() => {\n        replyer('tick', {\n            nodes: toNodePos(nodes)\n        });\n    }, 200));\n    simulation.on('end', () => {\n        replyer('end', {\n            nodes: toNodePos(nodes)\n        });\n        // no more extras\n        stopper();\n    });\n}\n\n\nonMessage((data) => {\n    const type = data.type;\n    const key = data.key;\n    const params = data.params;\n\n    const cmds = {\n        layout\n    };\n\n    const replyer = (type, params) => root.postMessage({ type, params, key });\n    \n    if (cmds[type]) {\n        cmds[type](params, replyer, key);\n    }\n});"],"sourceRoot":""}