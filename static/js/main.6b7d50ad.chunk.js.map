{"version":3,"sources":["worker/index.js","components/header/logo.svg","../node_modules/split-me/dist/esm/es5/build lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ groupOptions: {} namespace object","components/controls/grid.js","components/controls/reactselect.js","components/controls/slider.js","components/controls/select.js","components/controls/checkbox.js","data-provider/index.js","data-provider/parse.js","components/graph-vis/sort.js","datasets/precise/templates/tooltip.js","components/graph-vis/info-block.js","utils/webcomponents.js","components/graph-vis/structure.js","datasets/precise/templates/index.js","datasets/precise/templates/material.js","datasets/precise/templates/minimal.js","components/legend/LegendCircle.js","components/legend/LegendGradient.js","components/legend/SizeLegend.js","datasets/utils.js","datasets/default.js","datasets/precise/colors.js","datasets/precise/sizes.js","datasets/precise/index.js","datasets/cooccurence.js","datasets/index.js","data-provider/graph.js","store/index.js","rest/index.js","store/format.js","components/controls/rangeslider.js","components/graph-vis/filters.js","components/graph-vis/RotatedPin.js","components/graph-vis/layouts.js","components/graph-vis/controls.js","components/graph-vis/info-panel.js","geojs-scene-manager/index.js","components/graph-vis/index.js","components/graph-vis/node-size-legend.js","components/graph-vis/node-color-legend.js","components/graph-vis/tooltip.js","components/graph-vis/table.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Worker","__webpack_require__","p","map","./u9hv9ptx.entry.js","./u9hv9ptx.sc.entry.js","webpackAsyncContext","req","ids","e","then","id","Promise","resolve","Error","code","keys","Object","grid","props","children","React","Children","toArray","react_default","a","createElement","Grid","container","spacing","child","i","gridsize","xs","assign","item","key","useStyles","makeStyles","theme","root","flexGrow","height","minWidth","input","display","padding","valueContainer","flexWrap","flex","alignItems","overflow","clearIndicator","cursor","dropdownIndicator","chip","margin","chipFocused","backgroundColor","emphasize","palette","type","grey","noOptionsMessage","singleValue","fontSize","placeholder","position","left","bottom","paper","zIndex","marginTop","right","divider","inputComponent","_ref","inputRef","objectWithoutProperties","ref","components","Control","innerProps","innerRef","_props$selectProps","selectProps","classes","TextFieldProps","TextField","fullWidth","InputProps","inputProps","objectSpread","className","Menu","Paper","square","MultiValue","Chip","tabIndex","label","clsx","defineProperty","isFocused","onDelete","removeProps","onClick","deleteIcon","Cancel_default","NoOptionsMessage","Typography","color","Option","MenuItem","selected","component","style","fontWeight","isSelected","Placeholder","_props$innerProps","SingleValue","ValueContainer","ReactSelectWrapper","_ref2","rest","useTheme","selectStyles","base","text","primary","& input","font","react_select_esm","styles","InputLabelProps","shrink","ReactSelectSearchWrapper","_ref3","maxItems","options","defaultOptions","slice","loadOptions","inputValue","deburr","trim","toLowerCase","data","reduce","r","d","length","includes","push","SliderControlComponent","_this$props","this","value","range","step","onChange","digits","format","only","undefined","paddingRight","FormControl","variant","width","toFixed","Number","isInteger","paddingLeft","Slider","min","max","_e","val","Component","SelectControlComponent","selectOptions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","option","isString","replace","isFinite","err","return","InputLabel","Select","target","name","CheckboxControlComponent","FormControlLabel","control","Checkbox","checked","DiskDataProvider","_DataProvider","nodes","edges","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","graph","index","count","forEach","n","hasOwnProperty","edgeIndex","nodeIndex","computeGraph","_nodeIndex","entries","slicedToArray","k","v","_elements","match","_names","bad","indexOf","concat","inherits","createClass","_this2","nodeNames","bounds","pos","nodePosition","minx","Math","x","maxx","miny","y","maxy","POSITIVE_INFINITY","NEGATIVE_INFINITY","idx","edge","console","log","node","filter","_this3","table","countEdge","other","nodeExists","prop","discovery","DataProvider","sortStringsLength","b","sortStringsAlpha","renderTooltip","_store","defaultFormatter","InfoBlock","formatValue","d3Format","Fragment","gutterBottom","paragraph","wc","storedEl","customEvents","arguments","el","action","addEventListener","removeEventListener","_ref4","Structure","cjson","templates","render","store","hypothetical","degree","info_block_InfoBlock","getPropertyMetaData","formation_energy","synthesis_probability","eigen_cent","deg_cent","shortest_path","deg_neigh","structure","tooltip","LegendCircle","title","background","withStyles","borderRadius","&::before","content","top","whiteSpace","textAlign","transform","LegendGradient","scale","domain","colors","copy","samples","Array","from","gradientSamples","_","round","join","data-from","data-to","paddingTop","&::after","SizeLegend","factor","ticks","sum","radius","circle","innerCircle","paddingBottom","justifyContent","alignSelf","flexDirection","ApplicationStore","FIXED_COLOR","propertyColorFactory","meta","colorScale","legend","legend_LegendGradient","legend_LegendCircle","INVALID_VALUE_COLOR","createDefaultScale","scaleLinear","propertySizeFactory","createScale","sizeScaleRange","clamp","legend_SizeLegend","discovered","undiscovered","propertyList","property","factory","sizes","datasets_default","zoomRange","yearRange","properties","defaults","template","zoom","size","precise_colors","toConsumableArray","defaultTemplate","toString","UNDISCOVERED_COLOR","DISCOVERED_COLOR","year","colorYear","degreeFunction","degrees","nodeDegrees","minMax","values","precise_sizes","scaleSqrt","scalePow","exponent","scaleLog","precise","filterable","suffix","cooccurence","datasets","fileName","neighborsOf","nodeNameOrSet","lookup","isArray","Set","has","add","_temp","_class2","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_descriptor13","_descriptor14","_descriptor15","_descriptor16","_descriptor17","_descriptor18","_descriptor19","_descriptor20","_descriptor21","_descriptor22","_descriptor23","_descriptor24","_descriptor25","_descriptor26","_descriptor27","_descriptor28","_descriptor29","_descriptor30","_descriptor31","worker","autorun","toLoad","dataset","hovered","hoveredLine","node1","node2","filters","filterElements","pinnedNodes","fetch","resp","json","initState","structurePromise","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","sent","JSON","parse","abrupt","stop","_x","apply","search","get","integrateState","state","attr","found","find","pinned","toSelect","toPin","reaction","dispose","window","history","url","URL","location","href","searchParams","split","firstRun","drawerVisible","toJS","isEqual","set","delete","document","replaceState","pushState","delay","evt","info","entry","isfilterable","camelCase","formatSpecifier","spec","prefix","createFormatter","_minMaxProperty","_createProperty","nodeProperty","play","interval","_this4","clearInterval","setInterval","nextYear","setPlayState","asPinned","currentName","isPinned","removePinned","pushPinned","every","some","params","onMessage","_this5","uniqueId","replyer","postMessage","listener","msg","_this6","subGraphNodes","nodeSizer","subGraphLayouting","subGraphEdges","_postMessage","subGraphLayout","elements","_ref4$","s","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","elem","sort","_this7","filterFunc","_this8","filteredNodeNames","_this9","_ref5","_ref6","pow","_this10","_ref7","_ref8","filteredEdges","_this11","_class","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","computed","getOwnPropertyDescriptor","layouts","scaleSequential","interpolateViridis","createContext","RangeSliderControlComponent","Filters","observer","context","rangeslider","abs","isMulti","knownElements","contextType","Store","RotatedPin","index_es","icon","faThumbtack","Layouts","Button","disabled","computeSubGraphLayout","abortSubGraphLayout","CircularProgress","resetSubGraphLayout","toOption","simplify","Controls","filterSearchOption","rawInput","controls_select","searchOptions","isSearchable","isClearable","RotatedPin_RotatedPin","ExpansionPanel","expanded","drawerExpanded","isExpanded","ExpansionPanelSummary","expandIcon","ExpandMore","ExpansionPanelDetails","slider","spacingRange","opacity","showLinks","IconButton","toggleAutoplay","Pause","PlayArrow","controls_checkbox","showLegend","showTable","nightMode","graph_vis_filters","InfoPanel","onClear","togglePinned","float","Close","maxHeight","modal","FOCUS_OPACITY","DEFOCUS_OPACITY","SELECTION_STROKE_WIDTH","FOCUS_STROKE_WIDTH","DEFAULT_STROKE_WIDTH","GeoJSSceneManager","onZoomChanged","picked","onNodeSpacingChanged","_position","positionOverrides","dp","expansion","_strokeWidth","focus","_darkStrokePointColor","_nodeOpacity","parent","nextExpansionFocus","linkOpacity","linesVisible","linesNeedsToBeModified","getBounds","geo","util","pixelCoordinateParams","maxBounds","center","maxwh","allowRotation","clampBoundsY","clampBoundsX","layer","createLayer","features","lines","createFeature","strokeColor","strokeOpacity","visible","highlightLines","_isHighlighted","points","strokeWidth","fillColor","fillOpacity","onNode","geoOn","event","feature","mouseon","featureGcsToDisplay","mouseoff","lastPointEvent","mouseclick","mouse","modifiers","ctrl","debounce","time","dataTime","modified","_handleNodeSpacing","draw","overrides","deltaDirection","handle","onwheel","deltaY","actionwheel","mousemove","_neighborsOf","_updateEdgeHighlights","m","offCenter","nodeId","hasNode","isHighlighted","allLinesVisible","_showSubGraph","undisplay","show","night","bgColor","pointStrokeColor","getBoundingClientRect","GraphVisComponent","visElement","scene","selectNode","delta","dragging","status","start","ro","autoRunListeners","onVisDrag","preventDefault","clientX","clientY","linksOn","linksVisible","mouseMoveListener","onDrag","mouseUpListener","setTimeout","dx","dy","moveCamera","clearSceneListener","setAndObserve","f","expand","hideAfter","setNodeSize","zoomNodeSizeFactor","setLinkOpacity","setData","setPositions","setNightMode","setNodeColor","nodeColorer","ResizeObserver","resize","observe","initScene","initSceneListener","unobserve","clear","draggable","onDragStart","NodeSizeLegend","NodeColorLegend","marginLeft","Tooltip","open","anchorFake","clientWidth","clientHeight","DOMRect","Popper","placement","anchorEl","disablePortal","x-arrow","arrow","border","pointerEvents","&[x-placement^= \"top\"]","marginBottom","& $arrow","borderWidth","borderLeftColor","borderRightColor","borderBottomcolor","&[x-placement^= \"bottom\"]","borderTopcolor","&[x-placement^= \"right\"]","borderTopColor","marginRight","&[x-placement^= \"left\"]","borderStyle","borderColor","Table","onSelectionChanged","selection","filteredNodes","findIndex","LineUpJSx_default","singleSelection","defaultRanking","deriveColors","sidePanel","lineHeight","LineUpJSx","column","custom","numberFormat","createMuiTheme","default","darkTheme","App","onLogoClick","pathname","_clsx2","ThemeProvider","CssBaseline","AppBar","appBar","appBarShift","Toolbar","aria-label","menuButton","hide","Menu_default","src","logo","alt","noWrap","Drawer","drawer","drawerPaper","drawerHeader","ChevronLeft_default","controls","contentContainer","contentShift","contentNightMode","graph_vis","node_color_legend","node_size_legend","info_panel","graph_vis_tooltip","loaderWrapper","disableShrink","loader","minHeight","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","flexShrink","overflowX","mixins","toolbar","Boolean","hostname","defineSplitMe","defineMolecule","ReactDOM","src_store","Provider","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b7d50ad.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"9eca992fe5d7a95ab1ae.worker.js\");\n};","module.exports = __webpack_public_path__ + \"static/media/logo.89378f99.svg\";","var map = {\n\t\"./u9hv9ptx.entry.js\": [\n\t\t173,\n\t\t18\n\t],\n\t\"./u9hv9ptx.sc.entry.js\": [\n\t\t174,\n\t\t19\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 165;\nmodule.exports = webpackAsyncContext;","import React from 'react';\nimport {\n  Grid\n} from '@material-ui/core';\n\nexport default (props) => {\n  let {\n    children\n  } = props;\n\n  children = React.Children.toArray(children);\n\n  return (\n    <Grid container spacing={1}>\n      {children.map((child, i) => {\n        const gridsize = child.props.gridsize || {xs: 12}\n        return (\n          <Grid item key={i} {...gridsize}>\n            {child}\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport Select, { Async } from 'react-select';\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport { deburr } from 'lodash-es';\n\n// BASED on https://material-ui.com/components/autocomplete/\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        height: 250,\n        minWidth: 290,\n    },\n    input: {\n        display: 'flex',\n        padding: 0,\n        height: 'auto',\n    },\n    valueContainer: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flex: 1,\n        alignItems: 'center',\n        overflow: 'hidden',\n    },\n    clearIndicator: {\n        cursor: 'pointer'\n    },\n    dropdownIndicator: {\n        cursor: 'pointer'\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    chipFocused: {\n        backgroundColor: emphasize(\n            theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\n            0.08,\n        ),\n    },\n    noOptionsMessage: {\n        padding: theme.spacing(1, 2),\n    },\n    singleValue: {\n        fontSize: 16,\n    },\n    placeholder: {\n        position: 'absolute',\n        left: 2,\n        bottom: 6,\n        fontSize: 16,\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing(1),\n        left: 0,\n        right: 0,\n    },\n    divider: {\n        height: theme.spacing(2),\n    },\n}));\n\nfunction NoOptionsMessage(props) {\n    return (\n        <Typography\n            color=\"textSecondary\"\n            className={props.selectProps.classes.noOptionsMessage}\n            {...props.innerProps}\n        >\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction inputComponent({ inputRef, ...props }) {\n    return <div ref={inputRef} {...props} />;\n}\n\nfunction Control(props) {\n    const {\n        children,\n        innerProps,\n        innerRef,\n        selectProps: { classes, TextFieldProps },\n    } = props;\n\n    return (\n        <TextField\n            fullWidth\n            InputProps={{\n                inputComponent,\n                inputProps: {\n                    className: classes.input,\n                    ref: innerRef,\n                    children,\n                    ...innerProps,\n                },\n            }}\n            {...TextFieldProps}\n        />\n    );\n}\n\nfunction Option(props) {\n    return (\n        <MenuItem\n            ref={props.innerRef}\n            selected={props.isFocused}\n            component=\"div\"\n            style={{\n                fontWeight: props.isSelected ? 500 : 400,\n            }}\n            {...props.innerProps}\n        >\n            {props.children}\n        </MenuItem>\n    );\n}\n\nfunction Placeholder(props) {\n    const { selectProps, innerProps = {}, children } = props;\n    return (\n        <Typography color=\"textSecondary\" className={selectProps.classes.placeholder} {...innerProps}>\n            {children}\n        </Typography>\n    );\n}\n\nfunction SingleValue(props) {\n    return (\n        <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\n            {props.children}\n        </Typography>\n    );\n}\n\nfunction ValueContainer(props) {\n    return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\n}\n\nfunction MultiValue(props) {\n    return (\n        <Chip\n            tabIndex={-1}\n            label={props.children}\n            className={clsx(props.selectProps.classes.chip, {\n                [props.selectProps.classes.chipFocused]: props.isFocused,\n            })}\n            onDelete={props.removeProps.onClick}\n            deleteIcon={<CancelIcon {...props.removeProps} />}\n        />\n    );\n}\n\nfunction Menu(props) {\n    return (\n        <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\n            {props.children}\n        </Paper>\n    );\n}\n\nconst components = {\n    Control,\n    Menu,\n    MultiValue,\n    NoOptionsMessage,\n    Option,\n    Placeholder,\n    SingleValue,\n    ValueContainer,\n};\n\nexport default function ReactSelectWrapper({label, ...rest}) {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const selectStyles = {\n        input: base => ({\n            ...base,\n            color: theme.palette.text.primary,\n            '& input': {\n                font: 'inherit',\n            },\n        }),\n        clearIndicator: (base) => ({\n            ...base,\n            cursor: 'pointer'\n        }),\n        dropdownIndicator: (base) => ({\n            ...base,\n            cursor: 'pointer'\n        })\n    };\n\n    return (\n        <Select\n            classes={classes}\n            styles={selectStyles}\n            TextFieldProps={{\n                label,\n                InputLabelProps: {\n                    shrink: true,\n                },\n            }}\n            components={components}\n            {...rest}\n        />\n    );\n}\n\n\nexport function ReactSelectSearchWrapper({ label, maxItems, options, ...rest }) {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const selectStyles = {\n        input: base => ({\n            ...base,\n            color: theme.palette.text.primary,\n            '& input': {\n                font: 'inherit',\n            },\n        }),\n        clearIndicator: (base) => ({\n            ...base,\n            cursor: 'pointer'\n        }),\n        dropdownIndicator: (base) => ({\n            ...base,\n            cursor: 'pointer'\n        })\n    };\n\n    const loadOptions = (inputValue) => {\n        inputValue = deburr(inputValue.trim()).toLowerCase();\n\n        if (!inputValue) {\n            return maxItems ? options.slice(0, maxItems) : [];\n        }\n\n        const data = options.reduce((r, d) => {\n            if ((!maxItems || r.length < maxItems) && d.label.toLowerCase().includes(inputValue)) {\n                r.push(d);\n            }\n            return r;\n        }, []);\n\n        return Promise.resolve(data);\n    };\n    return (\n        <Async\n            classes={classes}\n            styles={selectStyles}\n            TextFieldProps={{\n                label,\n                InputLabelProps: {\n                    shrink: true,\n                },\n            }}\n            components={components}\n            defaultOptions={options.slice(0, maxItems || 10)}\n            loadOptions={loadOptions}\n            {...rest}\n        />\n    );\n}","import React, {Component} from 'react';\nimport {\n  FormControl,\n  Typography,\n  Slider\n} from '@material-ui/core';\n\nclass SliderControlComponent extends Component {\n\n  render() {\n    const {\n      label,\n      value,\n      range,\n      step,\n      onChange,\n      digits,\n      format,\n      children\n    } = this.props;\n\n    const child = children ? React.Children.only(children) : undefined;\n\n    const paddingRight = child ? 16 : 0;\n\n    return (\n      <FormControl fullWidth>\n        <Typography variant='caption'>\n          {label}\n        </Typography>\n        <div style={{display: 'flex', alignItems: 'center', width: '100%'}}>\n          <div>\n            {format ? format(value) : value.toFixed(Number.isInteger(digits) ? digits : 2)}\n          </div>\n          <div style={{flexGrow: 1, paddingLeft: 16, paddingRight}}>\n            <Slider\n              min={range[0]} max={range[1]} step={step}\n              value={value}\n              onChange={(_e, val) => { onChange(val); }}\n            />\n          </div>\n          {child}\n        </div>\n      </FormControl>\n    );\n  }\n}\n\nexport default SliderControlComponent;\n","import React, {Component} from 'react';\nimport {\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel\n} from '@material-ui/core';\n\nimport { isString } from 'lodash-es';\n\nclass SelectControlComponent extends Component {\n\n  render() {\n    const {\n      label,\n      value,\n      options,\n      onChange\n    } = this.props;\n\n    let selectOptions = [];\n    for (let option of options) {\n      if (isString(option)) {\n        selectOptions.push(\n          <MenuItem key={option} value={option}>{option.replace('\\\\u002', '.')}</MenuItem>\n        );\n      } else if (Number.isFinite(option)) {\n        selectOptions.push(\n          <MenuItem key={option} value={option}>{option}</MenuItem>\n        );\n      } else {\n        const {label, value} = option;\n        selectOptions.push(\n          <MenuItem key={value} value={value}>{label.replace('\\\\u002', '.')}</MenuItem>\n        );\n      }\n    }\n\n    return (\n      <FormControl fullWidth>\n        <InputLabel>\n          {label}\n        </InputLabel>\n        <Select\n          value={value || \"\"}\n          onChange={(e) => {onChange(e.target.value)}}\n          inputProps={{name: 'select', id: 'select'}}\n        >\n          {selectOptions}\n        </Select>\n      </FormControl>\n    );\n  }\n}\n\nexport default SelectControlComponent;\n","import React, {Component} from 'react';\nimport {\n  FormControl,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nclass CheckboxControlComponent extends Component {\n\n  render() {\n    const {\n      label,\n      value,\n      onChange\n    } = this.props;\n\n    return (\n      <FormControl fullWidth>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={value}\n              onChange={(_e, val) => {onChange(val);}}\n            />\n          }\n          label={label}\n        />\n      </FormControl>\n    );\n  }\n}\n\nexport default CheckboxControlComponent;\n","import { extractElements } from \"./parse\";\n\nexport class DataProvider {\n}\n\nexport function computeGraph (edges) {\n  // Create a node index table.\n  let index = {};\n  let count = 0;\n  edges.forEach(e => {\n    // Create an entry if the node hasn't been seen yet.\n    e.forEach(n => {\n      if (!index.hasOwnProperty(n)) {\n        // Record the index.\n        index[n] = count++;\n      }\n    });\n  });\n\n  // Create a version of the edges list that has indices instead of names.\n  const edgeIndex = edges.map(e => e.map(n => index[n]));\n\n  return {\n    nodeIndex: index,\n    edgeIndex\n  };\n}\n\nexport class DiskDataProvider extends DataProvider {\n  constructor (nodes, edges) {\n    super();\n\n    this.nodes = nodes;\n    this.edges = edges;\n\n    const graph = computeGraph(edges);\n    this._nodeIndex = graph.nodeIndex;\n    this.edgeIndex = graph.edgeIndex;\n\n    // inject the name of the node into the object\n    Object.entries(nodes).forEach(([k, v]) => {\n      v.name = k;\n      v._elements = extractElements(k);\n    });\n\n    this._names = Object.keys(this.nodes);\n    const bad = this._names.indexOf('value');\n    if (bad > -1) {\n      this._names = this._names.slice(0, bad).concat(this._names.slice(bad + 1));\n    }\n  }\n\n  getBounds() {\n    return this.nodeNames().reduce((bounds, name) => {\n      const pos = this.nodePosition(name);\n      return {\n        minx: Math.min(pos.x, bounds.minx),\n        maxx: Math.max(pos.x, bounds.maxx),\n        miny: Math.min(pos.y, bounds.miny),\n        maxy: Math.max(pos.y, bounds.maxy),\n      };\n    }, {\n      minx: Number.POSITIVE_INFINITY,\n      maxx: Number.NEGATIVE_INFINITY,\n      miny: Number.POSITIVE_INFINITY,\n      maxy: Number.NEGATIVE_INFINITY,\n    });\n  }\n\n  edgeCount () {\n    return this.edges.length;\n  }\n\n  edgePosition (idx) {\n    const edge = this.edges[idx];\n\n    const val = [\n      this.nodes[edge[0]],\n      this.nodes[edge[1]]\n    ];\n\n    if (val[0] === undefined || val[1] === undefined) {\n      console.log(idx);\n      console.log(edge);\n      console.log(val);\n    }\n\n    return val;\n  }\n\n  edgeNodes (idx) {\n    const edge = this.edges[idx];\n    return edge;\n  }\n\n  nodeNames () {\n    return this._names;\n  }\n\n  nodePosition (name) {\n    const node = this.nodes[name];\n\n    return {\n      x: node.x,\n      y: node.y\n    };\n  }\n\n  nodeDegrees (filter) {\n    let table = {};\n    const countEdge = (node, other) => {\n      if (!table.hasOwnProperty(node)) {\n        table[node] = 0;\n      }\n\n      if (this.nodeExists(other) && filter(this.nodes[node])) {\n        table[node]++;\n      }\n    }\n\n    this.edges.forEach(edge => {\n      countEdge(edge[0], edge[1]);\n      countEdge(edge[1], edge[0]);\n    });\n\n    return table;\n  }\n\n  nodeIndex (name) {\n    return this._nodeIndex[name];\n  }\n\n  nodeProperty (name, prop) {\n    return this.nodes[name][prop];\n  }\n\n  nodeExists (name) {\n    return this.nodes[name].discovery != null;\n  }\n\n  hasNode (name) {\n    return this.nodes[name] != null;\n  }\n}\n","export function extractElements(compound) {\n    // for now use the following logic:\n    // split by Captial letters, ignore numbers\n    const r = /([A-Z][a-z]?)/g;\n    return compound.match(r);\n}","function sortStringsAlpha (a, b) {\n  return a < b ? -1 : (a > b ? 1 : 0);\n}\n\nfunction sortStringsLength (a, b) {\n  if (a.length < b.length) {\n    return -1;\n  } else if (a.length > b.length) {\n    return 1;\n  } else {\n    return sortStringsAlpha(a, b);\n  }\n}\n\nexport { sortStringsAlpha, sortStringsLength };","import React from 'react';\nimport { Typography } from '@material-ui/core';\n\nexport default function renderTooltip(node, _store) {\n    return <Typography variant=\"caption\">{node.name}</Typography>;\n}","import React from 'react';\nimport { format as d3Format } from 'd3-format';\nimport { Typography } from '@material-ui/core';\n\nfunction defaultFormatter(v) {\n    if (v == null) {\n        return v;\n    }\n    if (typeof v === 'number') {\n        return v.toFixed(3);\n    }\n    return v;\n}\n\nexport default class InfoBlock extends React.Component {\n    render() {\n        const { label, value, format, children } = this.props;\n\n        const formatValue = typeof format === 'function' ? format : (format ? d3Format(format): defaultFormatter);\n\n        return value != null && <>\n            <Typography gutterBottom variant=\"caption\" color=\"textSecondary\">\n                {label}\n            </Typography>\n            <Typography paragraph>\n                {formatValue(value)}\n                {children}\n            </Typography>\n        </>;\n    }\n}","/***\n Taken from: https://github.com/ionic-team/ionic-react-conference-app/blob/master/src/utils/stencil.js\n \nThis function is meant to make it easier to use Props and Custom Events with Custom\nElements in React.\n<ion-segment\n  value={props.filterFavorites}\n  ionChange={(e) => props.updateFavoriteFilter(e.target.value)}\n>\n</ion-segment>\n     <<< SHOULD BE WRITTEN AS >>>\n<ion-segment\n  value={props.filterFavorites}\n  ref={wc({\n    ionChange: (e) => props.updateFavoriteFilter(e.target.value)\n  })}\n>\n</ion-segment>\n***/\n\nexport function wc(customEvents = {}, props = {}) {\n  let storedEl;\n\n  return function (el) {\n    Object.entries(customEvents).forEach(([name, value]) => {\n      // If we have an element then add event listeners\n      // otherwise remove the event listener\n      const action = (el) ? el.addEventListener : storedEl.removeEventListener;\n      if (typeof value === 'function') {\n        action(name, value);\n        return;\n      }\n    });\n    // If we have an element then set props\n    if (el) {\n      Object.entries(props).forEach(([name, value]) => {\n        el[name] = value;\n      });\n    }\n    storedEl = el;\n  };\n}\n","import React from 'react';\n\nimport { wc } from '../../utils/webcomponents.js';\n\nconst Structure = ({cjson}) => (\n  <oc-molecule\n    ref={wc(\n      // Events\n      {},\n      // Props\n      {\n        cjson\n      }\n    )}\n  />\n);\n\nexport default Structure;\n","import material from './material';\nimport minimal from './minimal';\n\nexport default [\n    material,\n    minimal\n]","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport tooltip from './tooltip';\nimport InfoBlock from '../../../components/graph-vis/info-block';\nimport Structure from '../../../components/graph-vis/structure';\n\nexport default {\n    label: 'Material',\n    render: (node, store) => {\n        const hypothetical = node.discovery == null;\n\n        return <>\n            <Typography gutterBottom variant=\"h4\">{`${node.name} (${hypothetical ? 'undiscovered' : node.discovery})`}</Typography>\n\n            <Typography gutterBottom variant=\"subtitle1\" component=\"div\">Material Properties</Typography>\n\n            {node.degree != null && <InfoBlock value={node.degree} {...store.getPropertyMetaData('degree')} />}\n            {node.formation_energy != null && <InfoBlock value={node.formation_energy} {...store.getPropertyMetaData('formation_energy')} />}\n            {node.synthesis_probability != null && <InfoBlock value={node.synthesis_probability} {...store.getPropertyMetaData('synthesis_probability')} />}\n\n            <Typography gutterBottom variant=\"subtitle1\" component=\"div\">Network Properties</Typography>\n\n            {node.eigen_cent != null && <InfoBlock value={node.eigen_cent} {...store.getPropertyMetaData('eigen_cent')} />}\n            {node.deg_cent != null && <InfoBlock value={node.deg_cent} {...store.getPropertyMetaData('deg_cent')} />}\n            {node.shortest_path != null && <InfoBlock value={node.shortest_path} {...store.getPropertyMetaData('shortest_path')} />}\n            {node.deg_neigh != null && <InfoBlock value={node.deg_neigh} {...store.getPropertyMetaData('deg_neigh')} />}\n\n            \n            <div style={{ width: '100%', height: '15rem' }}>\n                <Structure cjson={node.structure} />\n            </div>\n        </>;\n    },\n    tooltip\n}","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport tooltip from './tooltip';\nimport InfoBlock from '../../../components/graph-vis/info-block';\nimport Structure from '../../../components/graph-vis/structure';\n\nexport default {\n    label: 'Minimal',\n    render: (node, store) => {\n        const hypothetical = node.discovery == null;\n\n        return <>\n            <Typography gutterBottom variant=\"h4\">{`${node.name} (${hypothetical ? 'undiscovered' : node.discovery})`}</Typography>\n\n            <Typography gutterBottom variant=\"subtitle1\" component=\"div\">\n                Material Properties\n            </Typography>\n\n            {node.degree != null && <InfoBlock value={node.degree} {...store.getPropertyMetaData('degree')} /> }\n            {node.formation_energy != null && <InfoBlock value={node.formation_energy} {...store.getPropertyMetaData('formation_energy')} />}\n            {node.synthesis_probability != null && <InfoBlock value={node.synthesis_probability} {...store.getPropertyMetaData('synthesis_probability')} />}\n\n            <div style={{ width: '100%', height: '15rem' }}>\n                <Structure cjson={node.structure} />\n            </div>\n        </>;\n    },\n    tooltip\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core';\n\nconst height = 20;\n\nconst styles = theme => ({\n    root: {\n        borderRadius: '50%',\n        position: 'relative',\n        width: height,\n        margin: '0 3em',\n        height,\n        '&::before': {\n            content: 'attr(title)',\n            position: 'absolute',\n            top: '100%',\n            left: '50%',\n            whiteSpace: 'nowrap',\n            padding: 2,\n            textAlign: 'center',\n            transform: 'translate(-50%,0)'\n        }\n    }\n});\n\nclass LegendCircle extends React.Component {\n    render() {\n        const { classes, label, color } = this.props;\n\n        return <div className={classes.root} title={label} style={{ background: color }} />;\n    }\n}\n\nexport default withStyles(styles)(LegendCircle);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core';\n\nconst height = 20;\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        height: height / 2,\n        position: 'relative',\n        '&::before': {\n            content: 'attr(data-from)',\n            position: 'absolute',\n            top: '100%',\n            left: 0,\n            whiteSpace: 'nowrap',\n            paddingTop: height / 4 + 2,\n            textAlign: 'left'\n        },\n        '&::after': {\n            content: 'attr(data-to)',\n            position: 'absolute',\n            top: '100%',\n            right: 0,\n            whiteSpace: 'nowrap',\n            paddingTop: height / 4 + 2,\n            textAlign: 'right'\n        }\n    }\n});\n\nclass LegendGradient extends React.Component {\n    render() {\n        const { classes, scale, format } = this.props;\n        const gradientSamples = 10;\n        const domain = scale.domain();\n        // sample the color scale and create a gradient defintion out of it\n        const colors = scale.copy().domain([0, gradientSamples]);\n        const samples = Array.from({ length: gradientSamples + 1 }).map((_, i) => `${colors(i)} ${Math.round(i * 100 / gradientSamples)}%`).join(',');\n        return <div className={classes.root} data-from={format(domain[0])} data-to={format(domain[1])} style={{ background: `linear-gradient(to right, ${samples})` }} />;\n    }\n}\n\nexport default withStyles(styles)(LegendGradient);\n","import React from 'react';\nimport { ApplicationStore } from '../../store';\nimport { withStyles } from '@material-ui/core';\n\nconst width = 300;\nconst minWidth = 30;\n\nconst styles = theme => ({\n    root: {\n        width,\n        display: 'flex',\n        paddingBottom: 20,\n        justifyContent: 'space-between',\n        alignSelf: 'stretch'\n    },\n    circle: {\n        margin: '0 2px',\n        minWidth,\n        position: 'relative',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        '&::before': {\n            content: 'attr(title)',\n            position: 'absolute',\n            fontSize: 'small',\n            top: '100%',\n            left: '50%',\n            padding: 2,\n            textAlign: 'center',\n            transform: 'translate(-50%,0)'\n        }\n    },\n    innerCircle: {\n        borderRadius: '50%',\n        background: ApplicationStore.FIXED_COLOR,\n    }\n});\n\nclass SizeLegend extends React.Component {\n    render() {\n        const { classes, scale, factor, format } = this.props;\n\n        // number of points to draw\n        let count = 3;\n        for (; count < 10; count++) {\n            // ticks does some magic so compute all the time\n            const actWidth = scale.ticks(count).reduce((sum, v) => {\n                const width = Math.max(factor * scale(v) * 2, 30);\n                return sum + width;\n            }, 0);\n            if (actWidth > width) {\n                count--; // one too much\n                break;\n            }\n        }\n\n        // use divs to fake circles\n        return <div className={classes.root}>\n            {scale.ticks(count).map((v) => {\n                const radius = factor * scale(v);\n                return <div key={v} className={classes.circle} title={format ? format(v) : v}>\n                    <div className={classes.innerCircle} style={{\n                        width: `${radius * 2}px`,\n                        height: `${radius * 2}px`,\n                    }} />\n                </div>;\n            })}\n        </div>;\n    }\n}\n\nexport default withStyles(styles)(SizeLegend);\n","import React from 'react';\nimport { ApplicationStore } from '../store';\nimport { LegendGradient, LegendCircle, SizeLegend } from '../components/legend';\nimport { scaleLinear } from 'd3-scale';\n\n/**\n * coloring factory by property\n * @param {string} prop property to visualize\n */\nexport function propertyColorFactory(prop) {\n    return (store) => {\n        const meta = store.getPropertyMetaData(prop);\n        const scale = store.colorScale.copy().domain(meta.domain);\n\n        return {\n            legend: () => <>\n                <LegendGradient scale={scale} format={meta.format} />\n                <LegendCircle label=\"Unknown\" color={ApplicationStore.INVALID_VALUE_COLOR} />\n            </>,\n            scale: (node) => {\n                const value = node[prop];\n                return value != null ? scale(value) : ApplicationStore.INVALID_VALUE_COLOR;\n            }\n        };\n    }\n}\n\n/**\n * coloring factory by property existence\n * @param {string} prop property to visualize\n */\nexport function booleanColorFactory(prop, discovered, undiscovered) {\n    return (store) => {\n        return {\n            legend: () => <>\n                <LegendCircle label={discovered} color={ApplicationStore.DISCOVERED_COLOR} />\n                <LegendCircle label={undiscovered} color={ApplicationStore.UNDISCOVERED_COLOR} />\n            </>,\n            scale: (node) => {\n                const value = node[prop];\n                return value != null ? ApplicationStore.DISCOVERED_COLOR : ApplicationStore.UNDISCOVERED_COLOR;\n            }\n        };\n    }\n}\n\nfunction createDefaultScale(domain) {\n    return scaleLinear().domain(domain);\n}\n\n/**\n * size factory by property\n * @param {string} prop property to visualize\n */\nexport function propertySizeFactory(prop, createScale = createDefaultScale) {\n    return (store) => {\n        if (!store.data) {\n            return {\n                legend: () => null,\n                scale: () => store.sizeScaleRange[0]\n            };\n        }\n        const meta = store.getPropertyMetaData(prop);\n        const scale = createScale(meta.domain).range(store.sizeScaleRange).clamp(true);\n\n        return {\n            legend: (factor) => <SizeLegend scale={scale} factor={factor} format={meta.format}/>,\n            scale: (node) => {\n                const value = node[prop];\n                return value != null ? scale(value) : scale.range()[0];\n            },\n        };\n    }\n}","import { ApplicationStore } from \"../store\"\nimport React from 'react';\nimport { Typography } from \"@material-ui/core\";\nimport InfoBlock from '../components/graph-vis/info-block';\nimport Structure from '../components/graph-vis/structure';\n\nconst templates = [\n    {\n        label: 'Generic',\n        render: (node, store) => {\n            return <>\n                <Typography gutterBottom variant=\"h4\">{node.name}</Typography>\n                <Typography gutterBottom variant=\"subtitle1\" component=\"div\">Properties</Typography>\n\n                {store.propertyList.map((prop) => {\n                    const value = node[prop.property];\n                    if (value == null) {\n                        return null;\n                    }\n                    return <InfoBlock key={prop.property} value={value} {...prop} />;\n                })}\n\n                <div style={{ width: '100%', height: '15rem' }}>\n                    <Structure cjson={node.structure} />\n                </div>\n            </>;\n        },\n        tooltip: (node) => <Typography variant=\"caption\">{node.name}</Typography>\n    }\n]\n\nconst colors = [\n    {\n        label: 'None',\n        factory: () => ({\n            legend: () => null,\n            scale: () => ApplicationStore.FIXED_COLOR\n        })\n    },\n]\n\nconst sizes = [\n    {\n        label: 'None',\n        factory: () => ({\n            legend: () => null,\n            scale: () => 10,\n        })\n    },\n]\n\nexport default {\n    templates,\n\n    colors,\n    zoomRange: [-3.75, 3],\n    sizes,\n    yearRange: null, // disable\n\n    properties: {\n        \n    },\n\n    defaults: {\n        template: templates[0],\n        color: colors[0],\n        zoom: -2.3,\n        size: sizes[0]\n    },\n}\n","import React from 'react';\nimport { ApplicationStore } from '../../store';\nimport { LegendGradient, LegendCircle } from '../../components/legend';\nimport { propertyColorFactory, booleanColorFactory } from '../utils';\nimport defaultTemplate from '../default';\n\nexport default [\n    ...defaultTemplate.sizes,\n    {\n        label: 'Year of discovery',\n        factory: (store) => {\n            const scale = store.colorScale.copy().domain(store.yearRange);\n\n            return {\n                legend: () => <>\n                    <LegendGradient scale={scale} format={(v) => v.toString()} />\n                    <LegendCircle label=\"Undiscovered\" color={ApplicationStore.UNDISCOVERED_COLOR} />\n                </>,\n                scale: (node) => {\n                    const discovery = node.discovery;\n                    return discovery != null ? scale(discovery) : ApplicationStore.UNDISCOVERED_COLOR;\n                }\n            }\n        }\n    },\n    {\n        label: 'Discovered/Hypothetical',\n        factory: booleanColorFactory('discovery', 'Discovered', 'Hypothetical')\n    },\n    {\n        label: 'Discovered/Undiscovered',\n        factory: (store) => {\n            const year = store.colorYear;\n            return {\n                legend: () => <>\n                    <LegendCircle label=\"Discovered\" color={ApplicationStore.DISCOVERED_COLOR} />\n                    <LegendCircle label=\"Undiscovered\" color={ApplicationStore.UNDISCOVERED_COLOR} />\n                </>,\n                scale: (node) => {\n                    const discovery = node.discovery;\n                    return discovery != null && discovery <= year ? ApplicationStore.DISCOVERED_COLOR : ApplicationStore.UNDISCOVERED_COLOR;\n                }\n            };\n        }\n    },\n    {\n        label: 'Formation Energy',\n        factory: propertyColorFactory('formation_energy')\n    },\n    {\n        label: 'Synthesis Probability',\n        factory: propertyColorFactory('synthesis_probability')\n    },\n    {\n        label: 'Clustering Coefficient',\n        factory: propertyColorFactory('clus_coeff')\n    },\n    {\n        label: 'Eigenvector Centrality',\n        factory: propertyColorFactory('eigen_cent')\n    },\n    {\n        label: 'Degree Centrality',\n        factory: propertyColorFactory('deg_cent')\n    },\n    {\n        label: 'Shortest path',\n        factory: propertyColorFactory('shortest_path')\n    },\n    {\n        label: 'Degree Neighborhood',\n        factory: propertyColorFactory('deg_neigh')\n    },\n];","import React from 'react';\nimport { SizeLegend } from '../../components/legend';\nimport { scalePow, scaleLinear, scaleLog, scaleSqrt } from 'd3-scale';\nimport defaultTemplate from '../default';\n\n\nfunction degreeFunction(createScale) {\n    return (store) => {\n        if (!store.data) {\n            return {\n                legend: () => null,\n                scale: () => store.sizeScaleRange[0]\n            };\n        }\n        // map lookup\n        const degrees = store.data.nodeDegrees((node) => (node.discovery == null || node.discovery <= store.year));\n        const minMax = Object.values(degrees).reduce(([min, max], v) => {\n            if (v == null) {\n                return [min, max];\n            }\n            return [\n                Math.min(min, v),\n                Math.max(max, v)\n            ];\n        }, [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY]);\n\n        const scale = createScale(minMax).range(store.sizeScaleRange).clamp(true);\n        return {\n            legend: (factor) => <SizeLegend scale={scale} factor={factor}/>,\n            scale: (node) => {\n                const degree = degrees[node.name] || 0;\n                return scale(degree);\n            },\n        };\n    }\n}\n\nexport default [\n    ...defaultTemplate.sizes,\n    {\n        label: 'Degree - Linear',\n        factory: degreeFunction((domain) => scaleLinear().domain(domain))\n    },\n    {\n        label: 'Degree - Sqrt',\n        factory: degreeFunction((domain) => scaleSqrt().domain(domain))\n    },\n    {\n        label: 'Degree - Power 2',\n        factory: degreeFunction((domain) => scalePow().domain(domain).exponent(2))\n    },\n    {\n        label: 'Degree - Log',\n        factory: degreeFunction((domain) => scaleLog().domain([Math.max(1, domain[0]), domain[1]]))\n    }\n]","import templates from './templates';\nimport colors from './colors';\nimport sizes from './sizes';\nimport defaultTemplate from '../default';\n\n\nexport default {\n    ...defaultTemplate,\n    yearRange: [1945, 2016],\n    templates,\n    colors,\n    sizes,\n\n    properties: {\n        degree: {\n            label: 'Derived materials',\n            format: 'd'\n        },\n        formation_energy: {\n            label: \"Formation energy\",\n            filterable: true,\n            format: '.3f',\n            suffix: ` eV/atom`\n        },\n        synthesis_probability: {\n            label: \"Synthesis probability\",\n            filterable: true,\n            format: '.1%',\n            domain: [0, 1]\n        },\n        eigen_cent: {\n            label: 'Eigenvector centrality',\n            filterable: true,\n        },\n        deg_cent: {\n            label: 'Degree centrality',\n            filterable: true,\n        },\n        shortest_path: {\n            label: 'Shortest path'\n        },\n        deg_neigh: {\n            label: 'Degree neighborhood'\n        }\n    },\n\n    defaults: {\n        ...defaultTemplate.defaults,\n        template: templates[0],\n        color: colors[1],\n        zoom: -2.3,\n        size: sizes[1],\n        colorYear: 2016,\n        year: 2016,\n    },\n}\n","import defaultTemplate from './default';\nimport { propertyColorFactory, propertySizeFactory } from './utils';\n\nconst properties = {\n    degree: {\n        label: 'Derived materials',\n        format: 'd'\n    },\n    deg_cent: {\n        label: \"Degree Centrality\",\n        filterable: true,\n    },\n    eigen_cent: {\n        label: \"Eigenvector Centrality\",\n        filterable: true,\n    },\n};\n\nconst colors = [\n    ...defaultTemplate.colors,\n    ...Object.entries(properties).map(([prop, info]) => {\n        return {\n            label: info.label,\n            factory: propertyColorFactory(prop)\n        };\n    })\n]\n\nconst sizes = [\n    ...defaultTemplate.sizes,\n    ...Object.entries(properties).map(([prop, info]) => {\n        return {\n            label: info.label,\n            factory: propertySizeFactory(prop)\n        };\n    })\n]\n\nexport default {\n    ...defaultTemplate,\n    \n    properties,\n    colors,\n    sizes,\n\n    defaults: {\n        ...defaultTemplate.defaults,\n        color: colors[1],\n        size: sizes[1]\n    },\n}\n","import precise from './precise';\nimport cooccurence from './cooccurence';\n\n\nexport default [\n    {\n        label: 'Precise',\n        fileName: '/sample-data/precise.json',\n        ...precise\n    },\n    {\n        label: 'Precise - Gephi',\n        fileName: '/sample-data/precise-gephi.json',\n        ...precise\n    },\n    {\n        label: 'Sample 1',\n        fileName: '/sample-data/sample1.json',\n        ...precise\n    },\n    {\n        label: 'Sample 1 - Gephi',\n        fileName: '/sample-data/sample1-gephi.json',\n        ...precise\n    },\n    {\n        label: 'Sample 2',\n        fileName: '/sample-data/sample2.json',\n        ...precise\n    },\n    {\n        label: 'Coocurrence - 1k Edges',\n        fileName: '/sample-data/sample_cooccurence.json',\n        ...cooccurence\n    },\n    {\n        label: 'Coocurrence - 0.5M Edges',\n        fileName: '/sample-data/full_cooccurence.json',\n        ...cooccurence\n    }\n];","export function neighborsOf(nodeNameOrSet, edges) {\n    const lookup = (() => {\n      if (typeof nodeNameOrSet === 'string') {\n        nodeNameOrSet = [nodeNameOrSet];\n      }\n\n      return Array.isArray(nodeNameOrSet) ? new Set(nodeNameOrSet) : nodeNameOrSet;\n    })();\n\n    // Collect neighborhood of selected node.\n    const nodes = new Set(lookup);\n    for (const edge of edges) {\n        if (lookup.has(edge[0]) || lookup.has(edge[1])) {\n            nodes.add(edge[0]);\n            nodes.add(edge[1]);\n        }\n    }\n    return nodes;\n}\n","import { scaleSequential } from 'd3-scale';\nimport { interpolateViridis } from 'd3-scale-chromatic';\nimport { observable, autorun, action, computed, toJS } from \"mobx\";\nimport { createContext } from \"react\";\nimport { DiskDataProvider } from \"../data-provider\";\nimport { sortStringsLength } from \"../components/graph-vis/sort\";\nimport { fetchStructure } from \"../rest\";\nimport datasets from '../datasets';\nimport { isEqual, camelCase, uniqueId } from \"lodash-es\";\nimport { createFormatter } from './format';\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport Worker from 'worker-loader!../worker';\nimport { neighborsOf } from '../data-provider/graph';\n\nexport class ApplicationStore {\n    static INVALID_VALUE_COLOR = '#ff0000';\n    static DISCOVERED_COLOR = 'rgb(81,96,204)';\n    static UNDISCOVERED_COLOR = '#de2d26';\n    static FIXED_COLOR = `rgb(${0.2 * 255}, ${0.3 * 255}, ${0.8 * 255})`;\n\n    @observable\n    datasets = datasets;\n\n    @observable\n    dataset = datasets[0];\n\n    @observable\n    data = null;\n\n    @observable\n    template = null;\n\n    @computed\n    get templates() {\n        return this.dataset.templates;\n    }\n\n    @observable\n    zoom = 1;\n\n    @computed\n    get zoomRange() {\n        return this.dataset.zoomRange;\n    }\n\n    @observable\n    spacing = 1;\n    @observable\n    spacingRange = [0.1, 10];\n\n    @observable\n    opacity = 0.01;\n\n    @observable\n    play = false;\n    @observable\n    interval = null;\n\n    @observable\n    year = null;\n\n    @observable\n    colorYear = null;\n\n    @computed\n    get yearRange() {\n        return this.dataset.yearRange;\n    }\n\n    @observable\n    search = '';\n\n    @observable\n    color = null;\n\n    @computed\n    get colors() {\n        return this.dataset.colors;\n    }\n\n    @observable\n    size = null;\n\n    @computed\n    get sizes() {\n        return this.dataset.sizes;\n    }\n\n    @observable\n    showLinks = false;\n\n    @observable\n    nightMode = false;\n\n    @observable\n    selected = null;\n\n    @observable\n    pinnedNodes = [];\n\n    @observable\n    hovered = {\n        node: null,\n        position: null,\n        radius: null\n    };\n    @observable\n    hoveredLine = {\n        node1: null,\n        node2: null,\n        position: null\n    };\n\n    \n    @observable\n    drawerVisible = true;\n\n    @observable\n    showTable = false;\n\n    @observable\n    drawerExpanded = {\n            options: true,\n            filter: false,\n            layouts: false\n    };\n\n    @observable\n    colorScale = scaleSequential(interpolateViridis);\n\n    @observable\n    sizeScaleRange = [2, 40];\n\n\n    @observable\n    showLegend = true;\n\n    @observable\n    filters = {\n        // [property]: value ... filter object\n    };\n\n    @observable\n    subGraphLayout = {\n        // [name]: {x,y}\n    };\n\n    @observable\n    subGraphLayouting = null; // function to abort the current layout\n\n    @observable\n    filterElements = [];\n\n    worker = new Worker();\n\n    constructor() {\n        // load data and update on dataset change        \n        autorun(() => {\n            const toLoad = this.dataset.fileName;\n\n            // reset state\n            this.hovered = { node: null, position: null, radius: null };\n            this.hoveredLine = { node1: null, node2: null, position: null };\n            this.filters = {};\n            this.filterElements = [];\n            this.selected = null;\n            this.pinnedNodes = [];\n\n            // set the defaults from the dataset\n            Object.assign(this, this.dataset.defaults || {});\n\n            this.data = null;\n            // load data and update on dataset change\n            fetch(toLoad).then(resp => resp.json()).then(data => {\n                if (toLoad === this.dataset.fileName) {\n                    // still the same file to load\n                    this.data = new DiskDataProvider(data.nodes, data.edges);\n                }\n            });\n        });\n\n        // after loading defaults\n        this.initState();\n\n        // auto inject the structure\n        autorun(() => {\n            const node = this.selected;\n            if (!node || node.structure) {\n                return; // already fetched\n            }\n            node.structurePromise = fetchStructure(node.name).then(cjson => {\n                return node.structure = cjson;\n            });\n        });\n\n        autorun(() => {\n            if (!this.data) {\n                return;\n            }\n            const node = this.data.nodes[this.search];\n            if (node) {\n                this.selected = node;\n            }\n        });\n    }\n\n    initState() {\n        const integrateState = (state) => {\n            state = { ...state }; // copy to manipuate\n            ['dataset', 'color', 'size'].forEach((attr) => {\n                const value = state[attr];\n                delete state[attr];\n                if (!value) {\n                    return;\n                }\n                // find by label\n                const found = this[`${attr}s`].find((d) => d.label === value);\n                if (found) {\n                    this[attr] = found;\n                }\n            });\n            if (state.selected || state.pinned) {\n                // selected by name when data is \n                const toSelect = state.selected;\n                const toPin = state.pinned;\n                delete state.selected;\n                delete state.pinned;\n\n                autorun((reaction) => {\n                    if (!this.data) {\n                        return;\n                    }\n                    // lookup by name\n                    this.selected = this.data.nodes[toSelect];\n                    this.pinnedNodes = toPin.map((d) => this.data.nodes[d]).filter((d) => d != null);\n\n                    reaction.dispose(); // stop updating\n                });\n            }\n            // rest pure copy\n            Object.assign(this, state);\n        };\n\n        const state = window.history.state;\n        if (state && state.dataset != null) {\n            // use the stored state to init\n            integrateState(state);\n        } else {\n            // try using the url\n            const url = new URL(window.location.href);\n            const dataset = url.searchParams.get('ds');\n            const selected = url.searchParams.get('s');\n            const pinned = (url.searchParams.get('p') || '').split(',');\n            integrateState({\n                dataset,\n                selected,\n                pinned\n            });\n        }\n        \n        let firstRun = true;\n        // track state and update the url automatically\n        autorun(() => {\n            const state = {\n                dataset: this.dataset.label,\n                color: this.color.label,\n                size: this.size.label,\n                zoom: this.zoom,\n                colorYear: this.colorYear,\n                drawerVisible: this.drawerVisible,\n                filters: toJS(this.filters),\n                filterElements: toJS(this.filterElements),\n                selected: this.selected ? this.selected.name : null,\n                pinned: this.pinnedNodes.map((d) => d.name)\n            };\n\n            if (isEqual(state, window.history.state)) {\n                // no change\n                return;\n            }\n\n            const url = new URL(window.location.href);\n            url.searchParams.set('ds', this.dataset.label);\n            if (this.selected) {\n                url.searchParams.set('s', this.selected.name);\n            } else {\n                url.searchParams.delete('s');\n            }\n            if (this.pinnedNodes.length > 0) {\n                url.searchParams.set('p', this.pinnedNodes.map((d) => d.name).join(','));\n            } else {\n                url.searchParams.delete('p');\n            }\n            const title = document.title = `MaterialNet - ${this.dataset.label}${this.selected ? ` - ${this.selected.name}` : ''}`;\n            if (firstRun) {\n                firstRun = false;\n                window.history.replaceState(state, title, url.href);\n            } else {\n                window.history.pushState(state, title, url.href);\n            }\n        }, { delay: 300 }); // debounce 300ms\n        \n        // track history changes by the user (e.g. go back)\n        window.addEventListener('popstate', (evt) => {\n            const state = evt.state;\n            if (state && state.dataset != null) {\n                integrateState(state);\n            }\n        });\n        \n    }\n\n    @computed\n    get filterFunc() {\n        const filters = Object.entries(toJS(this.filters));\n        const elements = new Set(this.filterElements);\n        if (filters.length === 0 && elements.length === 0) {\n            return null;\n        }\n        return (node) => {\n            if (elements.size > 0 && node._elements.some((e) => !elements.has(e))) {\n                return false;\n            }\n            return filters.every(([prop, [min, max]]) => {\n                const value = node[prop];\n                return value != null && value >= min && value <= max;\n            });\n        };\n    }\n\n    @computed\n    get nodes() {\n        return this.data.nodes;\n    }\n\n    @computed\n    get edges() {\n        return this.data.edges;\n    }\n\n    @computed\n    get knownElements() {\n        if (!this.data) {\n            return [];\n        }\n        const s = new Set();\n        for (const name of this.data.nodeNames()) {\n            const elements = this.data.nodes[name]._elements;\n            for (const elem of elements) {\n                s.add(elem)\n            }\n        }\n        return Array.from(s).sort();\n    }\n\n    @computed\n    get filteredNodeNames() {\n        if (!this.data) {\n            return [];\n        }\n        const filter = this.filterFunc;\n        if (!filter) {\n            return this.data.nodeNames();\n        }\n        return this.data.nodeNames().filter((name) => filter(this.data.nodes[name]));\n    }\n\n    @computed\n    get filteredNodes() {\n        return this.filteredNodeNames.map((d) => this.data.nodes[d]);\n    }\n\n\n    @computed\n    get filteredEdges() {\n        if (!this.data) {\n            return [];\n        }\n        const filter = this.filterFunc;\n        if (!filter) {\n            return this.data.edges;\n        }\n        return this.data.edges.filter(([a, b]) => filter(this.data.nodes[a]) && filter(this.data.nodes[b]));\n    }\n\n    @computed\n    get zoomNodeSizeFactor() {\n        return Math.pow(2, this.zoom);\n    }\n    \n    @computed\n    get searchOptions() {\n        if (!this.data) {\n            return [];\n        }\n        return this.filteredNodeNames.slice().sort(sortStringsLength).map(value => ({ label: value, value }));\n    }\n\n    _createProperty(property, info = {}) {\n        const entry = {\n            property,\n            isfilterable: false,\n            type: 'numerical',\n            label: camelCase(property),\n            formatSpecifier: '.3f',\n            format: (v) => typeof v === 'number' ? v.toFixed(3) : v,\n            ...info\n        };\n        if (typeof entry.format === 'string') {\n            // create a formatter out of the spec\n            entry.formatSpecifier = entry.format;\n            entry.format = createFormatter(entry.format, entry.prefix, entry.suffix);            \n        }\n        if (entry.type === 'numerical' && !entry.domain) {\n            entry.domain = this._minMaxProperty(property);\n        }\n        return entry;\n    }\n\n    @computed\n    get properties() {\n        const properties = {};\n        Object.entries(this.dataset.properties).forEach(([property, info]) => {\n            properties[property] = this._createProperty(property, info);\n        });\n        return properties;\n    }\n\n    @computed\n    get propertyList() {\n        return Object.values(this.properties);\n    }\n\n    getPropertyMetaData(property) {\n        const prop = this.properties[property];\n        if (!prop) {\n            // fake property\n            return this._createProperty(property);\n        }\n        return prop;\n    }\n\n    _minMaxProperty(property, nodes) {\n        if (!this.data) {\n            return [0, 10];\n        }\n        nodes = nodes || this.data.nodeNames();\n\n        return nodes.reduce(([min, max], name) => {\n            const v = this.data.nodeProperty(name, property);\n            if (v == null) {\n                return [min, max];\n            }\n            return [\n                Math.min(min, v),\n                Math.max(max, v)\n            ];\n        }, [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY]);\n    }\n\n    @action\n    setPlayState(play, interval) {\n        this.play = play;\n        this.interval = interval;\n    }\n\n    @action\n    toggleAutoplay() {\n        if (!this.yearRange) {\n            return;\n        }\n        let interval = this.interval;\n        let play = !this.play;\n\n        if (this.play && this.interval) {\n            clearInterval(this.interval);\n            interval = null;\n        }\n\n        if (!this.play) {\n            interval = setInterval(() => {\n                let nextYear = this.year + 1;\n                if (this.year === this.yearRange[1]) {\n                    nextYear = this.yearRange[0];\n                }\n                this.year = nextYear;\n            }, 1000);\n        }\n\n        this.setPlayState(play, interval);\n    }\n\n    @action\n    selectNode(node, asPinned) {\n        const currentName = this.selected ? this.selected.name : '';\n        const isSelected = node && node.name === currentName;\n        const isPinned = node && this.isPinned(node);\n\n        if (asPinned) {\n            if (isPinned) {\n                this.removePinned(node);\n                if (isSelected) {\n                    this.selected = null;\n                }\n            } else {\n                this.pushPinned(node);\n                this.selected = node;\n            }\n            return;\n        }\n        this.selected = isSelected ? null : node;\n    }\n\n    @computed\n    get nodeColorer() {\n        if (!this.color) {\n            return {\n                legend: () => null,\n                scale: () => ApplicationStore.FIXED_COLOR\n            };\n        }\n        return this.color.factory(this);\n    }\n\n    @computed\n    get nodeSizer() {\n        if (!this.size) {\n            return {\n                legend: () => null,\n                scale: () => 10\n            };\n        }\n        return this.size.factory(this);\n    }\n\n    @action\n    pushPinned(node) {\n        if (this.pinnedNodes.every((d) => d.name !== node.name)) {\n            this.pinnedNodes.push(node);\n        }\n    }\n\n    isPinned(node) {\n        return this.pinnedNodes.some((d) => d.name === node.name);\n    }\n\n    @action\n    removePinned(node) {\n        this.pinnedNodes = this.pinnedNodes.filter((n) => n.name !== node.name);\n    }\n\n    @computed\n    get subGraphNodes() {\n        if (!this.selected && this.pinnedNodes.length === 0) {\n            return this.filteredNodeNames;\n        }\n        return Array.from(neighborsOf(this.pinnedNodes.length > 0 ? this.pinnedNodes.map((d) => d.name) : this.selected.name, this.filteredEdges));\n    }\n\n    @computed\n    get subGraphNodeObjects() {\n        return this.subGraphNodes.map((name) => this.nodes[name]);\n    }\n\n    @computed\n    get subGraphEdges() {\n        const nodes = new Set(this.subGraphNodes);\n        if (nodes.size === 0) {\n            return [];\n        }\n        return this.filteredEdges.filter((d) => nodes.has(d[0]) && nodes.has(d[1]));\n    }\n\n    _postMessage(type, params, onMessage) {\n        const key = uniqueId();\n        const replyer = (type, params) => this.worker.postMessage({ type, params, key });\n\n        const listener = (msg) => {\n            if (msg.data.key !== key) {\n                return;\n            }\n            const done = onMessage(msg.data, replyer);\n            if (done) {\n                this.worker.removeEventListener('message', listener);\n            }\n        }\n        this.worker.addEventListener('message', listener);\n        this.worker.postMessage({ type, params, key });\n        return replyer;\n    }\n\n    @action\n    computeSubGraphLayout() {\n        const nodes = toJS(this.subGraphNodes).map((name) => {\n            const node = this.nodes[name];\n            const layoutNode = {\n                name,\n                x: node.x,\n                y: node.y,\n                radius: this.nodeSizer.scale(node)\n            };\n            return layoutNode;\n        });\n\n        if (nodes.length === 0) {\n            return;\n        }\n        this.subGraphLayouting = true;\n\n        const edges = toJS(this.subGraphEdges);        \n\n        this.subGraphLayouting = this._postMessage('layout', { nodes, edges }, (msg) => {\n            const nodes = msg.params.nodes;\n            this.subGraphLayout = nodes;\n\n            if (msg.type === 'end') {\n                this.subGraphLayouting = null;\n                return true;\n            }\n            // just a tick\n            return false;\n        });\n    }\n\n    @action\n    abortSubGraphLayout() {\n        if (this.subGraphLayouting) {\n            this.subGraphLayouting('abort', {});\n            this.subGraphLayouting = null;\n        }\n    }\n\n    @action\n    resetSubGraphLayout() {\n        this.subGraphLayout = {};\n    }\n}\n\nexport default createContext();\n","export function fetchStructure(name) {\n  return fetch(`sample-data/structures/${name}.cjson`)\n    .then(async res => {\n      const text = await res.text();\n      let json;\n      try {\n        json = JSON.parse(text);\n      } catch (e) {\n        json = null;\n      }\n\n      return json;\n    });\n}\n","import { format } from \"d3-format\";\n\nexport function createFormatter(spec, prefix, suffix) {\n    const base = format(spec);\n\n    if (!prefix && !suffix) {\n        return base;\n    }\n    return (v) => `${prefix || ''}${base(v)}${suffix || ''}`;\n}","import React, {Component} from 'react';\nimport {\n  FormControl,\n  Typography,\n  Slider\n} from '@material-ui/core';\n\nclass RangeSliderControlComponent extends Component {\n\n  render() {\n    const {\n      label,\n      value,\n      range,\n      step,\n      onChange,\n      digits,\n      format,\n      children\n    } = this.props;\n\n    const child = children ? React.Children.only(children) : undefined;\n\n    return (\n      <FormControl fullWidth>\n        <Typography variant='caption'>\n          {label}\n        </Typography>\n        <div style={{display: 'flex', alignItems: 'center', width: '100%'}}>\n          <div>\n            {format ? format(value[0]) : value[0].toFixed(Number.isInteger(digits) ? digits : 2)}\n          </div>\n          <div style={{flexGrow: 1, paddingLeft: 16, paddingRight: 16}}>\n            <Slider\n              min={range[0]} max={range[1]} step={step}\n              value={value}\n              onChange={(_e, val) => { onChange(val); }}\n            />\n          </div>\n          <div>\n            {format ? format(value[1]) : value[1].toFixed(Number.isInteger(digits) ? digits : 2)}\n          </div>\n          {child}\n        </div>\n      </FormControl>\n    );\n  }\n}\n\nexport default RangeSliderControlComponent;\n","import React from 'react';\n\nimport Grid from '../controls/grid';\nimport Store from '../../store';\nimport { observer } from 'mobx-react';\nimport ReactSelectWrapper from '../controls/reactselect';\nimport RangeSliderControlComponent from '../controls/rangeslider';\n\n@observer\nclass Filters extends React.Component {\n  static contextType = Store;\n\n  \n  render() {\n    const store = this.context;\n    return (<Grid>\n      {store.propertyList.filter((meta) => meta.filterable).map((meta) => <RangeSliderControlComponent\n        key={meta.label}\n        value={store.filters[meta.property] ? store.filters[meta.property].slice() : meta.domain.slice()}\n        range={meta.domain}\n        label={meta.label}\n        step={meta.step || 0.0001}\n        format={meta.format}\n        onChange={(val) => {\n          if (val.every((d, i) => Math.abs(d - meta.domain[i]) < 0.00001)) {\n            // same as domain\n            delete store.filters[meta.property];\n          } else {\n            store.filters[meta.property] = val.slice();\n          }\n        }}\n      />)}\n      <ReactSelectWrapper\n        label=\"Elements\"\n        value={store.filterElements.map((value) => ({ label: value, value }))}\n        isMulti\n        options={store.knownElements.map((value) => ({ label: value, value }))}\n        onChange={(values) => {\n          store.filterElements = values.map((d) => d.value);\n        }}\n      />\n    </Grid>\n    );\n  }\n}\n\nexport default Filters;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbtack } from '@fortawesome/free-solid-svg-icons';\n\nexport default class RotatedPin extends React.Component {\n    render() {\n        return <FontAwesomeIcon icon={faThumbtack} style={{ transform: `rotate(45deg)` }} {...this.props}/>\n    }\n}","import React from 'react';\n\nimport Grid from '../controls/grid';\nimport Store from '../../store';\nimport { observer } from 'mobx-react';\nimport { Button, CircularProgress } from '@material-ui/core';\n\n@observer\nclass Layouts extends React.Component {\n  static contextType = Store;\n  \n  render() {\n    const store = this.context;\n    return (<Grid>\n      {!store.subGraphLayouting && <Button\n        disabled={store.selected == null && store.pinnedNodes.length === 0}\n        onClick={() => store.computeSubGraphLayout()}>\n        start layout\n      </Button>}\n      {store.subGraphLayouting && <Button\n        onClick={() => store.abortSubGraphLayout()}>\n        <CircularProgress />&nbsp;abort\n      </Button>}\n      {!store.subGraphLayouting && <Button\n        disabled={Object.keys(store.subGraphLayout).length === 0}\n        onClick={() => store.resetSubGraphLayout()}>\n        reset layout\n      </Button>}      \n    </Grid>\n    );\n  }\n}\n\nexport default Layouts;","import React from 'react';\n\nimport {\n  Checkbox,\n  IconButton,\n  ExpansionPanel,\n  ExpansionPanelDetails,\n  ExpansionPanelSummary,\n  Typography, Chip\n} from '@material-ui/core';\n\nimport { PlayArrow, Pause, ExpandMore} from '@material-ui/icons';\n\nimport Grid from '../controls/grid';\nimport { ReactSelectSearchWrapper} from '../controls/reactselect';\nimport SliderControl from '../controls/slider';\nimport SelectControl from '../controls/select';\nimport CheckboxControl from '../controls/checkbox';\nimport Filters from './filters';\nimport Store from '../../store';\nimport { observer } from 'mobx-react';\nimport { deburr } from 'lodash-es';\nimport RotatedPin from './RotatedPin';\nimport Layouts from './layouts';\n\nfunction simplify(label) {\n  // simplify the label for better values\n  return deburr(label).replace(/[ ,.<>/|\\\\[]{}-_=+()*&^%$#@!~\\t\\n\\r]+/gm, '');\n}\n\nfunction toOption(v) {\n  const label = v.label;\n  const value = v.value || simplify(label);\n  return { label, value };\n}\n\n@observer\nclass Controls extends React.Component {\n  static contextType = Store;\n\n  filterSearchOption = ({ value }, rawInput) => {\n    rawInput = rawInput.trim();\n    value = value.trim();\n    if (!rawInput) {\n      return false;\n    }\n    return value.includes(rawInput);\n  }\n\n  render() {\n    const store = this.context;\n    return (\n      <Grid>\n        {store.datasets.length > 1 && <SelectControl\n          value={toOption(store.dataset).value}\n          options={store.datasets.map(toOption)}\n          label={'Dataset'}\n          onChange={(val) => { store.dataset = store.datasets.find((d) => toOption(d).value === val); }}\n        />}\n        <ReactSelectSearchWrapper\n          label={'Search'}\n          options={store.searchOptions}\n          value={store.search ? {label: store.search, value: store.search} : null}\n          isSearchable\n          placeholder=\"Search (e.g. NaCl)\"\n          isClearable\n          maxItems={20}\n          onChange={(val) => store.search = val ? val.value : null}\n        />\n\n        <div>\n          {store.pinnedNodes.map((node) => (<Chip key={node.name} icon={<RotatedPin />} label={node.name} onClick={() => store.selected = node} onDelete={() => store.removePinned(node)} />))}\n        </div>\n\n        <ExpansionPanel expanded={store.drawerExpanded.options} onChange={(_, isExpanded) => { store.drawerExpanded.options = isExpanded }}>\n          <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n            <Typography>Options</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Grid>\n              <SliderControl\n                value={store.zoom}\n                range={store.zoomRange}\n                label={'Zoom'}\n                onChange={(val) => { store.zoom = val; }}\n              />\n              <SliderControl\n                value={store.spacing}\n                range={store.spacingRange}\n                step={0.1}\n                label={'Node spacing'}\n                onChange={(val) => { store.spacing = val; }}\n              />\n              <SliderControl\n                value={store.opacity}\n                range={[0, 0.1]}\n                step={0.001}\n                label={'Link opacity / display'}\n                disabled={!store.showLinks}\n                onChange={(val) => { store.opacity = val; }}\n              >\n                <Checkbox checked={store.showLinks} onChange={(_e, val) => { store.showLinks = val; }} />\n              </SliderControl>\n              {store.templates.length > 1 && <SelectControl\n                value={toOption(store.template).value}\n                options={store.templates.map(toOption)}\n                label={'Template'}\n                onChange={(val) => { store.template = store.templates.find((d) => toOption(d).value === val); }}\n              />}\n              { /* dataset specific */}\n              {store.yearRange && <SliderControl\n                value={store.year}\n                range={store.yearRange}\n                step={1}\n                label={'Discovered before'}\n                digits={0}\n                onChange={(val) => { store.year = val; }}\n              >\n                <IconButton\n                  onClick={() => store.toggleAutoplay()}\n                >\n                  {store.play ? <Pause /> : <PlayArrow />}\n                </IconButton>\n              </SliderControl>}\n              <SelectControl\n                value={toOption(store.size).value}\n                options={store.sizes.map(toOption)}\n                label={'Node size'}\n                onChange={(val) => {\n                  store.size = store.sizes.find((d) => toOption(d).value === val);\n                }}\n              />\n              <SelectControl\n                value={toOption(store.color).value}\n                options={store.colors.map(toOption)}\n                label={'Node color'}\n                onChange={(val) => { store.color = store.colors.find((d) => toOption(d).value === val); }}\n              />\n              { /* dataset specific */}\n              {store.yearRange && <SliderControl\n                value={store.colorYear}\n                range={store.yearRange}\n                step={1}\n                label={'Color year'}\n                digits={0}\n                disabled={!store.color || store.color.label !== 'Discovered/Undiscovered'}\n                onChange={(val) => { store.colorYear = val; }}\n              />}\n              <CheckboxControl\n                label=\"Show Legend\"\n                value={store.showLegend}\n                onChange={(val) => { store.showLegend = val; }}\n              />\n              <CheckboxControl\n                label=\"Show Table\"\n                value={store.showTable}\n                onChange={(val) => { store.showTable = val; }}\n              />\n              <CheckboxControl\n                label=\"Night mode\"\n                value={store.nightMode}\n                onChange={(val) => { store.nightMode = val; }}\n                />\n            </Grid>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel expanded={store.drawerExpanded.filter} onChange={(_, isExpanded) => { store.drawerExpanded.filter = isExpanded }}>\n          <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n            <Typography>Filtering</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Filters />\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n\n        <ExpansionPanel expanded={store.drawerExpanded.layouts} onChange={(_, isExpanded) => { store.drawerExpanded.layouts = isExpanded }}>\n          <ExpansionPanelSummary expandIcon={<ExpandMore />}>\n            <Typography>Layout</Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Layouts />\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </Grid>\n    );\n  }\n}\n\nexport default Controls;","import React from 'react';\nimport Store from '../../store';\nimport { withStyles, Paper, IconButton } from '@material-ui/core';\nimport { observer } from 'mobx-react';\nimport { Close } from '@material-ui/icons';\nimport RotatedPin from './RotatedPin';\n\n\nconst visStyles = theme => ({\n  root: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    overflow: 'auto',\n    maxHeight: '100%',\n    padding: '1rem',\n    minWidth: '15rem',\n    zIndex: theme.zIndex.modal\n  }\n});\n\n@observer\nclass InfoPanel extends React.Component {\n  static contextType = Store;\n\n  onClear = () => this.context.selected = null;\n\n  togglePinned = () => {\n    const store = this.context;\n    const node = store.selected;\n\n    if (!node) {\n      return;\n    }\n\n    if (store.isPinned(node)) {\n      store.removePinned(node);\n    } else {\n      store.pushPinned(node);\n    }\n  }\n\n  render() {\n    const store = this.context;\n    const { classes } = this.props;\n    const node = store.selected;\n\n    if (!node) {\n      return null;\n    }\n    return <Paper className={classes.root}>\n      <IconButton style={{ float: 'right' }} onClick={this.onClear} title=\"Clear Selection\" size=\"small\"><Close /></IconButton>\n      <IconButton style={{ float: 'right' }} onClick={this.togglePinned} title={store.isPinned(node) ? 'Unpin Selection' : 'Pin Selection'} size=\"small\" color={store.isPinned(node) ? 'primary' : 'inherit'}>\n        <RotatedPin />\n      </IconButton>\n      \n\n      {store.template && store.template.render(node, store)}\n    </Paper>;\n  }\n}\n\nexport default withStyles(visStyles)(InfoPanel);","import geo from 'geojs/geo.min.js';\nimport { neighborsOf } from '../data-provider/graph';\nimport { debounce } from 'lodash-es';\n\nconst FOCUS_OPACITY = 0.8;\nconst DEFOCUS_OPACITY = 0.05;\nconst SELECTION_STROKE_WIDTH = 4;\nconst FOCUS_STROKE_WIDTH = 3;\nconst DEFAULT_STROKE_WIDTH = 1;\n\nexport class GeoJSSceneManager {\n  constructor({ onZoomChanged, picked, hovered, hoveredLine, onNodeSpacingChanged }) {\n    this.dp = null;\n    this.parent = null;\n    this.onZoomChanged = onZoomChanged;\n    this.onNodeSpacingChanged = onNodeSpacingChanged;\n    this.picked = picked;\n    this.hovered = hovered;\n    this.hoveredLine = hoveredLine;\n    this.nextExpansionFocus = null;\n    this.map = null;\n\n    this.expansion = 1;\n    this.selected = null;\n    this.focus = new Set();\n    this.subGraphNodes = new Set();\n    this.linkOpacity = 0.01;\n    this.linesVisible = false;\n    this.positionOverrides = {};\n    this.linesNeedsToBeModified = false;\n  }\n\n  initScene(zoomRange) {\n    this.map = null;\n    const dp = this.dp;\n\n    if (!this.parent || !this.dp) {\n      return false;\n    }\n\n    const bounds = dp.getBounds();\n    const params = geo.util.pixelCoordinateParams(this.parent, bounds.maxx - bounds.minx, bounds.maxy - bounds.miny);\n\n    // the utility function assumes top left is 0, 0.  Move it to minx, miny.\n    params.map.maxBounds.left += bounds.minx;\n    params.map.maxBounds.top += bounds.miny;\n    params.map.maxBounds.right += bounds.minx;\n    params.map.maxBounds.bottom += bounds.miny;\n    params.map.center.x += bounds.minx;\n    params.map.center.y += bounds.miny;\n\n    // inflate the bounds to add a border\n    const maxwh = Math.max(bounds.maxx - bounds.minx, bounds.maxy - bounds.miny);\n    const factor = 0.5;\n    params.map.maxBounds.left -= maxwh * factor;\n    params.map.maxBounds.top -= maxwh * factor;\n    params.map.maxBounds.right += maxwh * factor;\n    params.map.maxBounds.bottom += maxwh * factor;\n\n    // allow zoomming in until 1 unit of space is 2^(value) bigger.\n    params.map.min = zoomRange[0];\n    params.map.max = zoomRange[1];\n    params.map.allowRotation = false;\n    params.map.clampBoundsY = params.map.clampBoundsX = false;\n\n    const map = this.map = geo.map(params.map);\n\n    const layer = map.createLayer('feature', {\n      features: [\n        'point',\n        'line',\n      ],\n    });\n\n    this.lines = layer.createFeature('line')\n      .data(dp.edges)\n      .style({\n        position: this._position,\n        width: 1,\n        strokeColor: 'black',\n        strokeOpacity: this.linkOpacity,\n      })\n      .visible(this.linesVisible); // disable by default\n    \n    this.highlightLines = layer.createFeature('line')\n      .data([])\n      .style({\n        position: this._position,\n        width: 1,\n        strokeColor: 'black',\n        strokeOpacity: this.linkOpacity,\n      })\n      .visible(this.linesVisible && this._isHighlighted());\n\n    const points = this.points = layer.createFeature('point', {\n      // primitiveShape: 'triangle',\n      style: {\n        strokeColor: 'black',\n        strokeWidth: this._strokeWidth,\n        fillColor: 'gray',\n        strokeOpacity: FOCUS_OPACITY,\n        fillOpacity: FOCUS_OPACITY,\n        radius: 10,\n      },\n      position: this._position,\n    })\n      .data(dp.nodeNames());\n\n    let onNode = null;\n\n    points.geoOn(geo.event.feature.mouseon, evt => {\n      onNode = this.dp.nodes[evt.data];\n\n      // compute point dimensions\n      const radius = points.style(\"radius\")(evt.data);\n      // position relative to canvas\n      const position = this.points.featureGcsToDisplay(points.position()(evt.data));\n      this.hovered(onNode, position, radius);\n    });\n    points.geoOn(geo.event.feature.mouseoff, evt => {\n      onNode = null;\n      this.hovered(null, null, null);\n    });\n\n    let lastPointEvent = null;\n    points.geoOn(geo.event.feature.mouseclick, evt => {\n      if (evt.top) {\n        this.picked(this.dp.nodes[evt.data], evt.mouse.modifiers.ctrl);\n      }\n      lastPointEvent = evt.mouse;\n    });\n    this.map.geoOn(geo.event.mouseclick, debounce((evt) => {\n      if (lastPointEvent && lastPointEvent.time === evt.time) {\n        return;\n      }\n      // seems like we have a click that didn't hit something\n      this.picked(null, false);\n    }, 100));\n\n    // NOTE: disable line hovering for now till figured out where to show\n    // let onLine = null;\n    // lines.geoOn(geo.event.feature.mouseon, evt => {\n    //   if (onNode) {\n    //     return;\n    //   }\n    //   onLine = evt.data.map((d) => this.dp.nodes[d]);\n    //   this.hoveredLine(onLine[0], onLine[1], evt.mouse.geo);\n    // });\n    // lines.geoOn(geo.event.feature.mousemove, evt => {\n    //   this.hoveredLine(onLine[0], onLine[1], evt.mouse.geo);\n    // });\n    // lines.geoOn(geo.event.feature.mouseoff, evt => {\n    //   if (onNode) {\n    //     return;\n    //   }\n    //   onLine = null;\n    //   this.hoveredLine(null, null, null);\n    // });\n\n    map.geoOn(geo.event.zoom, () => {\n      points.dataTime().modified();\n      this.onZoomChanged(map.zoom());\n    });\n\n    this._handleNodeSpacing();\n\n    map.draw();\n\n    return true;\n  }\n\n  _isHighlighted() {\n    return this.selected != null || this.focus.size > 0;\n  }\n\n  _position = (name) => {\n    const pos = this.positionOverrides[name] || this.dp.nodePosition(name);\n    if (this.expansion === 1) {\n      return pos;\n    }\n    return {\n      x: pos.x * this.expansion,\n      y: pos.y * this.expansion\n    };\n  }\n\n  setPositions(overrides) {\n    this.positionOverrides = overrides;\n\n    this.points.dataTime().modified();\n    if (this.lines.visible()) {\n      this.linesNeedsToBeModified = true;\n      this.lines.dataTime().modified();\n    }\n    if (this.highlightLines.visible()) {\n      this.highlightLines.dataTime().modified();\n    }\n    this.map.draw();\n  }\n\n  _strokeWidth = (name) => {\n    if (name === this.selected) {\n      return SELECTION_STROKE_WIDTH;\n    } else if (this.focus.has(name)) {\n      return FOCUS_STROKE_WIDTH;\n    }\n    return DEFAULT_STROKE_WIDTH;\n  }\n\n  _darkStrokePointColor = (name) => {\n    if (name === this.selected || this.focus.has(name)) {\n      return 'white';\n    }\n    return 'black';\n  }\n\n  _nodeOpacity = (name) => {\n    return this.subGraphNodes.has(name) || name === this.selected ? FOCUS_OPACITY : DEFOCUS_OPACITY;\n  }\n\n  _handleNodeSpacing() {\n    let deltaDirection = null;\n\n    const handle = () => {\n      // run when we have both\n      if (deltaDirection == null || this.nextExpansionFocus == null) {\n        return;\n      }\n      this.onNodeSpacingChanged(deltaDirection);\n      deltaDirection = null;\n    };\n\n    // since not provided by geojs\n    this.parent.onwheel = (evt) => {\n      deltaDirection = evt.deltaY;\n      handle();\n    };\n\n    // Capture the mouse coordinates on a first mousewheel event in a sequence.\n    this.map.geoOn(geo.event.actionwheel, (evt) => {\n      if (!evt.mouse.modifiers.ctrl) {\n        return;\n      }\n      if (!this.nextExpansionFocus) {\n        this.nextExpansionFocus = evt.mouse.geo;\n      }\n      handle();\n    });\n\n    // Clear the mouse coordinates as soon as the mouse moves.\n    this.map.geoOn(geo.event.mousemove, () => {\n      this.nextExpansionFocus = null;\n    });\n  }\n\n  _neighborsOf(nodeNameOrSet) {\n    return neighborsOf(nodeNameOrSet, this.lines.data());\n  }\n\n  setData(nodes, edges) {\n    if (!this.map) {\n      return;\n    }\n    this.points.data(nodes);\n    this.lines.data(edges);\n\n    if (this._isHighlighted()) {\n      // recompute subgraph can shrink or grow\n      this.subGraphNodes = this._neighborsOf(this.focus.size > 0 ? this.focus : this.selected);\n      this._updateEdgeHighlights();\n    }\n    this.map.draw();\n  }\n\n  expand(m) {\n    if (this.expansion === m) {\n      return;\n    }\n\n    const factor = m / this.expansion;\n\n    this.expansion = m;\n    if (!this.map) {\n      return;\n    }\n\n    const center = this.map.center();\n    if (this.nextExpansionFocus) {\n      // set when the user zoomed in via mouse\n      const offCenter = {\n        x: this.nextExpansionFocus.x - center.x,\n        y: this.nextExpansionFocus.y - center.y\n      };\n\n      // same distance from the visible center as before but the new target\n      this.map.center({\n        x: factor * this.nextExpansionFocus.x - offCenter.x,\n        y: factor * this.nextExpansionFocus.y - offCenter.y\n      });\n\n      // Expand the click position in order to work around a bug in GeoJS.\n      this.nextExpansionFocus.x *= factor;\n      this.nextExpansionFocus.y *= factor;\n    } else {\n      this.map.center({\n        x: factor * center.x,\n        y: factor * center.y\n      });\n    }\n\n    this.points.dataTime().modified();\n    if (this.lines.visible()) {\n      this.linesNeedsToBeModified = true;\n      this.lines.dataTime().modified();\n    }\n    if (this.highlightLines.visible()) {\n      this.highlightLines.dataTime().modified();\n    }\n    this.map.draw();\n  }\n\n  setLinkOpacity (value) {\n    this.linkOpacity = value;\n    this.lines.style('strokeOpacity', this.linkOpacity);\n    this.highlightLines.style('strokeOpacity', this.linkOpacity);\n\n    if (this.lines.visible()) {\n      this.linesNeedsToBeModified = true;\n      this.lines.modified();\n    }\n    if (this.highlightLines.visible()) {\n      this.highlightLines.modified();\n    }\n    this.map.draw();\n  }\n\n  hideAfter() {}\n\n  setNodeSize(scale, factor) {\n    this.points.style('radius', (nodeId) => factor * scale(this.dp.nodes[nodeId]));\n    if (this.map) {\n      this.map.draw();\n    }\n  }\n\n  pickName (name) {\n    if (!this.dp.hasNode(name)) {\n      return null;\n    }\n\n    return this.dp.nodes[name];\n  }\n\n  _showSubGraph(subGraphNodes) {\n    this.subGraphNodes = subGraphNodes;\n    // Set opacity of all nodes in accordance with membership in the\n    // neighborhood.\n    this.points.style('fillOpacity', this._nodeOpacity);\n    this.points.style('strokeOpacity', this._nodeOpacity);\n\n    this._updateEdgeHighlights();\n\n    this.map.draw();\n  }\n\n  _updateEdgeHighlights() {\n    const isHighlighted = this._isHighlighted();\n\n    const allLinesVisible = this.linesVisible && !isHighlighted;\n    this.lines.visible(allLinesVisible);\n    if (allLinesVisible && this.linesNeedsToBeModified) {\n      this.lines.dataTime().modified();\n      this.linesNeedsToBeModified = false;\n    }\n\n    if (!isHighlighted || !this.linesVisible) {\n      // no highlight lines\n      this.highlightLines.visible(false);\n      this.highlightLines.data([]);\n      return;\n    }\n\n    this.highlightLines.data(this.lines.data().filter(([a, b]) => this.subGraphNodes.has(a) && this.subGraphNodes.has(b)));\n    this.highlightLines.visible(true);\n  }\n\n  display(selected, pinned = []) {\n    this.focus = new Set(pinned);\n    this.selected = selected;\n\n    if (this.focus.size === 0 && !selected) {\n      this.undisplay();\n      return;\n    }\n\n    const nodes = this._neighborsOf(this.focus.size > 0 ? this.focus : this.selected);\n    this._showSubGraph(nodes);\n  }\n\n\n  undisplay() {\n    this.selected = null;\n    this.focus = new Set();\n    this.subGraphNodes = new Set();\n\n    if (!this.map) {\n      return;\n    }\n    this.points.style('fillOpacity', FOCUS_OPACITY);\n    this.points.style('strokeOpacity', FOCUS_OPACITY);\n    this._updateEdgeHighlights();\n    this.map.draw();\n  }\n\n  linksVisible(show) {\n    this.linesVisible = show;\n    this._updateEdgeHighlights();\n    this.map.draw();\n  }\n\n  setNightMode (night) {\n    const bgColor = night ? 'black' : 'white';\n    const strokeColor = night ? 'white' : 'black';\n    const pointStrokeColor = night ? this._darkStrokePointColor : 'black';\n\n    this.parent.style.backgroundColor = bgColor;\n    this.points.style('strokeColor', pointStrokeColor);\n    this.lines.style('strokeColor', strokeColor); \n    this.highlightLines.style('strokeColor', strokeColor);\n    this.map.draw();\n  }\n\n  setNodeColor(scale) {\n    this.points.style('fillColor', (nodeId) => scale(this.dp.nodes[nodeId]));\n    this.map.draw();\n  }\n\n  render () {}\n  resize() {\n    if (!this.map || !this.parent) {\n      return;\n    }\n    this.map.size(this.parent.getBoundingClientRect());\n  }\n  pick () {}\n  moveCamera () {}\n  clear () {}\n\n  get zoom () {\n    return this.map.zoom();\n  }\n\n  set zoom (zoom) {\n    this.map.zoom(zoom);\n  }\n}\n","import React, { Component } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport { GeoJSSceneManager } from '../../geojs-scene-manager';\nimport Store from '../../store';\nimport { observer } from 'mobx-react';\nimport { autorun } from 'mobx';\nimport { debounce } from 'lodash-es';\n\n\n@observer\nclass GraphVisComponent extends Component {\n  static contextType = Store;\n\n  visElement;\n  scene = new GeoJSSceneManager({\n    onZoomChanged: (val) => this.context.zoom = val,\n    picked: (node, asPinned) => {\n      this.context.selectNode(node, asPinned);\n    },\n    onNodeSpacingChanged: (delta) => {\n      const next = this.context.spacing + (delta > 0 ? -0.1 : 0.1);\n      this.context.spacing = Math.max(next, Math.min(this.context.spacingRange[1], this.context.spacingRange[0]));\n    },\n    hovered: (node, position, radius) => {\n      this.context.hovered = { node, position, radius };\n    },\n    hoveredLine: (node1, node2, position) => {\n      this.context.hoveredLine = { node1, node2, position };\n    }\n  });\n\n  dragging = {\n    status: false,\n    start: {x: 0, y: 0}\n  }\n  ro;\n\n  autoRunListeners = [];\n\n  clearSceneListener() {\n    this.autoRunListeners.forEach((v) => v());\n    this.autoRunListeners = [];\n  }\n\n  initSceneListener() {\n    // delete old ones\n    this.clearSceneListener();\n\n    const store = this.context;\n\n    const setAndObserve = (f, options) => {\n      this.autoRunListeners.push(autorun(f, options));\n    };\n    setAndObserve(() => {\n      this.scene.zoom = store.zoom;\n    });\n    setAndObserve(() => {\n      this.scene.expand(store.spacing);\n    });\n    setAndObserve(() => {\n      this.scene.hideAfter(store.year);\n      this.scene.setNodeSize(store.nodeSizer.scale, store.zoomNodeSizeFactor);\n    });\n    setAndObserve(() => {\n      this.scene.setLinkOpacity(store.opacity);\n    }, { delay: 250 }); // debounce\n    setAndObserve(() => {\n      this.scene.setData(store.filteredNodeNames, store.filteredEdges);\n    }, { delay: 250 }); // debounce\n    setAndObserve(() => {\n      this.scene.display(store.selected ? store.selected.name : null, store.pinnedNodes.map((d) => d.name));\n    });\n    setAndObserve(() => {\n      this.scene.setPositions(store.subGraphLayout);\n    }, { delay: 300 });\n    setAndObserve(() => {\n      this.scene.linksVisible(store.showLinks);\n    });\n    setAndObserve(() => {\n      this.scene.setNightMode(store.nightMode);\n    });\n\n    setAndObserve(() => {\n      this.scene.setNodeColor(store.nodeColorer.scale);\n    });\n  }\n\n  componentDidMount() {\n    this.scene.parent = this.visElement;\n    // debounce resize to await the animatiion\n    this.ro = new ResizeObserver(debounce(() => {\n      this.scene.resize();\n    }, 200));\n\n    this.ro.observe(this.visElement);\n\n    if (this.scene.initScene(this.context.zoomRange)) {\n      // set defaults\n      this.initSceneListener();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.ro) {\n      this.ro.unobserve(this.visElement);\n    }\n\n    this.clearSceneListener();\n    this.scene.clear();\n    this.scene.parent = null;\n  }\n\n  onVisDrag = (event) => {\n    event.preventDefault();\n    this.dragging.status = true;\n    this.dragging.start = {x: event.clientX, y: event.clientY};\n\n    const linksOn = this.context.showLinks;\n    if (linksOn) {\n      this.scene.linksVisible(false);\n    }\n\n    const mouseMoveListener = (e) => {\n      this.onDrag(e);\n    };\n\n    const mouseUpListener = () => {\n      window.removeEventListener('mousemove', mouseMoveListener);\n      window.removeEventListener('mouseup', mouseUpListener);\n\n      if (linksOn) {\n        this.scene.linksVisible(true);\n      }\n\n      setTimeout(() => {this.dragging.status = false;}, 50);\n    };\n\n    window.addEventListener('mousemove', mouseMoveListener);\n    window.addEventListener('mouseup', mouseUpListener);\n  }\n\n  onDrag = (e) => {\n    if (!this.dragging.status) {\n      return;\n    }\n    const dx = e.clientX - this.dragging.start.x;\n    const dy = e.clientY - this.dragging.start.y;\n    this.scene.moveCamera(dx, dy);\n    this.dragging.start = {x: e.clientX, y: e.clientY};\n  }\n\n  render() {\n    const store = this.context;\n\n    if (this.scene.dp !== store.data) {\n      // data has changed\n      this.scene.clear();\n      this.scene.dp = store.data;\n      if (this.scene.initScene(store.zoomRange)) {\n        // set defaults\n        this.initSceneListener();\n      }\n    }\n\n    return (<div\n          style={{width: '100%', height: '100%'}}\n          ref={ref => {this.visElement = ref}}\n          draggable\n          onDragStart={this.onVisDrag}\n    />);\n  }\n}\n\nexport default GraphVisComponent;\n","import React from 'react';\nimport Store from '../../store';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = theme => ({\n    root: {\n        \n    }\n});\n\n@observer\nclass NodeSizeLegend extends React.Component  {\n    static contextType = Store;\n\n    render() {\n        const store = this.context;\n        \n        return store.nodeSizer.legend(store.zoomNodeSizeFactor);\n    }\n}\n\nexport default withStyles(styles)(NodeSizeLegend);\n","import React from 'react';\nimport Store from '../../store';\nimport { observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core';\n\nconst styles = theme => ({\n    root: {\n        marginLeft: '1em',\n        width: 300,\n        paddingBottom: 20,\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: 'small',\n        justifyContent: 'space-around'\n    }\n});\n\n@observer\nclass NodeColorLegend extends React.Component  {\n    static contextType = Store;\n\n    render() {\n        const store = this.context;\n        const { classes } = this.props;\n        \n        const legend = store.nodeColorer.legend();\n\n        return legend && <div className={classes.root}>{legend}</div>;\n    }\n}\n\nexport default withStyles(styles)(NodeColorLegend);\n","import React from 'react';\nimport Store from '../../store';\nimport { withStyles, Popper } from '@material-ui/core';\nimport { observer } from 'mobx-react';\n\n\nconst visStyles = theme => ({\n  root: {\n    background: `rgba(255, 255, 255, 0.75)`,\n    borderRadius: 3,\n    border: `1px solid rgba(0, 0, 0, 0.75)`,\n    color: 'black',\n    padding: '0.25rem',\n    pointerEvents: ['none', '!important'],\n\n    // based on https://popper.js.org/index.html\n    '&[x-placement^= \"top\"]': {\n      marginBottom: 5,\n      '& $arrow': {\n        borderWidth: '5px 5px 0 5px',\n        borderLeftColor: 'transparent',\n        borderRightColor: 'transparent',\n        borderBottomcolor: 'transparent',\n        bottom: -5,\n        left: `calc(50% - 5px)`,\n        marginTop: 0,\n        marginBottom: 0\n      }\n    },\n    '&[x-placement^= \"bottom\"]': {\n      marginTop: 5,\n      '& $arrow': {\n        borderWidth: '0 5px 5px 5px',\n        borderLeftColor: 'transparent',\n        borderRightColor: 'transparent',\n        borderTopcolor: 'transparent',\n        top: -5,\n        left: `calc(50% - 5px)`,\n        marginTop: 0,\n        marginBottom: 0\n      }\n    },\n    '&[x-placement^= \"right\"]': {\n      marginLeft: 5,\n      '& $arrow': {\n        borderWidth: '5px 5px 5px 0',\n        borderLeftColor: 'transparent',\n        borderTopColor: 'transparent',\n        borderBottomcolor: 'transparent',\n        left: -5,\n        top: `calc(50% - 5px)`,\n        marginLeft: 0,\n        marginRight: 0\n      }\n    },\n    '&[x-placement^= \"left\"]': {\n      marginRight: 5,\n      '& $arrow': {\n        borderWidth: '5px 0 5px 5px',\n        borderRightColor: 'transparent',\n        borderTopColor: 'transparent',\n        borderBottomcolor: 'transparent',\n        right: -5,\n        top: `calc(50% - 5px)`,\n        marginLeft: 0,\n        marginRight: 0\n      }\n    },\n  },\n  arrow: {\n    width: 0,\n    height: 0,\n    borderStyle: 'solid',\n    position: 'absolute',\n    margin: 5,\n    borderColor: 'black',\n  }\n});\n\n\n@observer\nclass Tooltip extends React.Component {\n  static contextType = Store;\n\n  render() {\n    const store = this.context;\n    const { classes } = this.props;\n\n    const hovered = store.hovered;\n    \n    const open = hovered.node != null;\n\n    // instead of a DOM fake the needed structure\n    // see https://popper.js.org/popper-documentation.html#referenceObject\n    const anchorFake = open ? {\n      clientWidth: hovered.radius * 2,\n      clientHeight: hovered.radius * 2,\n      getBoundingClientRect: () => new DOMRect(hovered.position.x - hovered.radius, hovered.position.y - hovered.radius, hovered.radius * 2, hovered.radius * 2)\n    } : null;\n\n    return <Popper open={open} placement=\"top\" anchorEl={anchorFake} className={classes.root} disablePortal>\n      {hovered.node && store.template.tooltip(hovered.node, store)}\n      <div x-arrow=\"x\" className={classes.arrow}/>\n    </Popper>;\n  }\n}\n\nexport default withStyles(visStyles)(Tooltip);","import React from 'react';\nimport Store from '../../store';\nimport { observer } from 'mobx-react';\nimport LineUp, { LineUpStringColumnDesc, LineUpNumberColumnDesc } from 'lineupjsx';\nimport 'lineupjsx/build/LineUpJSx.css';\n\n@observer\nclass Table extends React.Component {\n  static contextType = Store;\n\n  onSelectionChanged = (selection) => {\n    const store = this.context;\n    store.selected = selection.length > 0 ? store.filteredNodes[selection[0]] : null;\n  };\n  \n  render() {\n    const store = this.context;\n    const selected = store.selected ? store.filteredNodes.findIndex((d) => d.name === store.selected.name) : -1;\n\n    return (<LineUp data={store.filteredNodes}\n      singleSelection defaultRanking\n      deriveColors sidePanel={false} style={{ flexGrow: 1, lineHeight: 'normal' }}\n      selection={selected >= 0 ? [selected] : undefined} onSelectionChanged={this.onSelectionChanged}\n    >\n      <LineUpStringColumnDesc column=\"name\" />\n      {store.propertyList.map((prop) => <LineUpNumberColumnDesc key={prop.label} column={prop.property} label={prop.label} domain={prop.domain} custom={{ numberFormat: prop.formatSpecifier }} />)}\n    </LineUp>);\n  }\n}\n\nexport default Table;","import React from 'react';\n\nimport { withStyles, Drawer, AppBar, Toolbar, IconButton, Button, Typography, CircularProgress } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Controls from './components/graph-vis/controls';\nimport InfoPanel from './components/graph-vis/info-panel';\nimport GraphVisComponent from './components/graph-vis';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport logo from './components/header/logo.svg';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport clsx from 'clsx';\nimport Store from './store';\nimport { observer } from 'mobx-react';\nimport './App.css';\nimport NodeSizeLegend from './components/graph-vis/node-size-legend';\nimport NodeColorLegend from './components/graph-vis/node-color-legend';\nimport Tooltip from './components/graph-vis/tooltip';\nimport Table from './components/graph-vis/table';\nimport { grey } from '@material-ui/core/colors';\n\n// based on https://material-ui.com/components/drawers/\nconst drawerWidth = 360;\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      paper: grey[100],\n      default: grey[100]\n    }\n  }\n});\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  }\n});\n\nconst appStyles = theme => ({\n  root: {\n    width: '100%',\n    minHeight: '100%',\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(1),\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    position: 'relative',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    paddingTop: 0,\n    overflowX: 'hidden'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  contentContainer: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  content: {\n    position: 'relative',\n    flexGrow: 1\n  },\n  contentNightMode: {\n    color: 'white'\n  },\n  legend: {\n    zIndex: 100,\n    position: 'absolute',\n    bottom: 3,\n    left: 0,\n    display: 'flex',\n    alignItems: 'flex-end'\n  },\n  loaderWrapper: {\n    zIndex: theme.zIndex.tooltip,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    background: 'rgba(255,255,255,0.25)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loader: {\n    margin: theme.spacing(2)\n  }\n})\n\n@observer\nclass App extends React.Component {\n  static contextType = Store;\n\n  onLogoClick = () => {\n    window.location.replace(window.location.pathname);\n  };\n\n  render() {\n    const store = this.context;\n    const { classes } = this.props;\n\n    return (\n      <ThemeProvider theme={store.nightMode ? darkTheme : theme}>\n        <div className={classes.root}>\n          <CssBaseline />\n          <AppBar color=\"default\" position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: store.drawerVisible,\n            })}\n          >\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={() => { store.drawerVisible = true; }}\n                edge=\"start\"\n                className={clsx(classes.menuButton, store.drawerVisible && classes.hide)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Button color=\"inherit\" aria-label=\"Logo\" style={{ marginRight: 9 }} onClick={this.onLogoClick}>\n                <img className='logo' src={logo} alt=\"logo\" style={{ filter: store.nightMode ? `invert(100%)` : null }}/>\n              </Button>\n              <Typography variant=\"h5\" color=\"inherit\" noWrap>\n                MaterialNet - {store.dataset.label}{store.pinnedNodes.length > 0 ? ` - ${store.pinnedNodes.map((d) => d.name).join(', ')}` : ''}\n                </Typography>\n              <div style={{ flex: 1 }}>\n              </div>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            className={classes.drawer}\n            variant='persistent'\n            open={store.drawerVisible}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <IconButton onClick={() => { store.drawerVisible = false; }}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Controls />\n          </Drawer>\n          <div className={clsx(classes.contentContainer, {\n            [classes.contentShift]: store.drawerVisible,\n            [classes.contentNightMode]: store.nightMode\n          })}>\n            <div className={classes.drawerHeader} />\n            <div className={classes.content}>\n              <GraphVisComponent />\n              {store.showLegend && <div className={classes.legend}>\n                <NodeColorLegend />\n                <NodeSizeLegend />\n              </div>}\n              <InfoPanel />\n              <Tooltip />\n              {!store.data && <div className={classes.loaderWrapper}><CircularProgress disableShrink className={classes.loader} size={100}/></div>}\n            </div>\n            {store.showTable && <Table />}\n          </div>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(appStyles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Store, { ApplicationStore } from './store';\n\nimport { defineCustomElements as defineSplitMe } from 'split-me/dist/loader';\nimport { defineCustomElements as defineMolecule } from '@openchemistry/molecule';\ndefineSplitMe(window);\ndefineMolecule(window);\n\nconst store = new ApplicationStore();\n\nReactDOM.render(\n    <Store.Provider value={store}>\n        <App />\n    </Store.Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}